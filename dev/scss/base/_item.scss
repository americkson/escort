////////////////////////////////////////////////////////////////////////////////
// ITEM
// -----------------------------------------------------------------------------
// Styles that apply globally to escort items. All position-specific styles 
// should be added in the region specific style section.

.escort-item {
  position: relative;
  min-width: $base-size;

  > div {
    display: block;
    white-space: nowrap;
  }
}

/**
 * Top AND Bottom region
 */
@include get-location($type: horizontal) {

  .escort-item {
    line-height: $base-size;
    padding: 0 $padding;
    text-align: center;
    display: block;
    float: left;

    &.escort-group {
      border: 0;
      padding: 0;
    }

    &.has-icon:not(.escort-add):not(.escort-toggle) { // sass-lint:disable-line force-pseudo-nesting

      .escort-content {
        margin-left: $margin / 2;
      }
    }
  }
}

/**
 * Top region only
 */
@include get-location($type: horizontal, $region: top) {

  .escort-item {
    border-right: 1px dashed smart-scale($bg-color-top, $scale: 25%);
    border-left: 1px dashed smart-scale($bg-color-top, $scale: 25%);
  }

  .escort-link:not(.escort-add) { // sass-lint:disable-line force-pseudo-nesting

    &:hover {
      background: smart-scale($bg-color-top, $scale: -12%);

      .escort-content {
        color: smart-scale($bg-color-top, $scale: 80%);
      }
    }

    &.is-active {
      background: smart-scale($bg-color-top, $scale: 5%);
    }
  }

  .escort-content {
    color: smart-scale($bg-color-top, $scale: 60%);
    text-shadow: 0 1px 2px adjust-color($bg-color-top, $lightness: -25%);
  }
}

/**
 * Bottom region only
 */
@include get-location($type: horizontal, $region: bottom) {

  .escort-item {
    border-right: 1px dashed smart-scale($bg-color-bottom, $scale: 25%);
    border-left: 1px dashed smart-scale($bg-color-bottom, $scale: 25%);
  }

  .escort-link:not(.escort-add) { // sass-lint:disable-line force-pseudo-nesting

    &:hover {
      background: smart-scale($bg-color-bottom, $scale: -12%);

      .escort-content {
        color: smart-scale($bg-color-bottom, $scale: 80%);
      }
    }

    &.is-active {
      background: smart-scale($bg-color-bottom, $scale: 5%);
    }
  }

  .escort-content {
    color: smart-scale($bg-color-bottom, $scale: 60%);
    text-shadow: 0 1px 2px scale-color($bg-color-bottom, $lightness: -25%);
  }
}

/**
 * Left AND Right region only
 */
@include get-location($type: vertical) {

  .escort-item {
    padding: $padding 0;
    display: block;

    &.escort-group {
      display: block;
      border: 0;
      padding: 0;

      .escort-content {
        display: block;

        .escort-content {
          display: inline-block;
        }
      }
    }

    .escort-content {
      display: inline-block;
      line-height: $base-size / 2;
    }
  }
}

/**
 * Left region only
 */
@include get-location($type: vertical, $region: left) {

  .escort-item {
    border-bottom: 1px solid rgba(smart-scale($bg-color-left), 0.2); // sass-lint:disable-line no-color-literals
  }

  .escort-link:not(.escort-add) { // sass-lint:disable-line force-pseudo-nesting

    &:hover {

      .escort-content {
        color: smart-scale($bg-color-left, $scale: 80%);
      }
    }
  }

  .escort-content {
    color: smart-scale($bg-color-left, $scale: 60%);
    text-shadow: 0 1px 2px scale-color($bg-color-left, $lightness: -25%);
  }
}

/**
 * Right region only
 */
@include get-location($type: vertical, $region: right) {

  .escort-item {
    border-bottom: 1px solid rgba(smart-scale($bg-color-right), 0.2); // sass-lint:disable-line no-color-literals
  }

  .escort-link:not(.escort-add) { // sass-lint:disable-line force-pseudo-nesting

    &:hover {

      .escort-content {
        color: smart-scale($bg-color-right, $scale: 80%);
      }
    }
  }

  .escort-content {
    color: smart-scale($bg-color-right, $scale: 60%);
    text-shadow: 0 1px 2px scale-color($bg-color-right, $lightness: -25%);
  }
}
