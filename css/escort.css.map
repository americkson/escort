{"version":3,"sources":["base/_wrapper.scss","utils/_variables.scss","base/_region.scss","base/_region_horizontal.scss","utils/_functions.scss","base/_region_vertical.scss","base/_item.scss","base/_admin.scss","utils/_mixins.scss","base/_typography.scss","components/_add.scss","components/_icon.scss","components/_ops.scss","components/_toggle.scss"],"names":[],"mappings":"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","file":"escort.css","sourcesContent":["////////////////////////////////////////////////////////////////////////////////\n// WRAPPER\n// -----------------------------------------------------------------------------\n// Defines toolbar layout and basic interactivity\n\n/**\n * hide overflow on the body\n */\n.has-escort {\n  overflow: hidden;\n}\n\n/**\n * The wrapper around the content of the page. The escort regions exists as\n * siblings to this element.\n */\n.escort-wrapper-scroll {\n  position: relative;\n  z-index: 100;\n  background: $white;\n  overflow-x: hidden;\n  -webkit-overflow-scrolling: touch; // sass-lint:disable-line no-misspelled-properties\n}\n\n.escort-wrapper {\n  z-index: 0;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  height: auto;\n\n  @each $region, $settings in $regions {\n\n    /**\n     * Offset the main content area based on the size of each escort region\n     * unless the region is set as hidden (deterined based on the\n     * body.hide-escort-?).\n     */\n    .has-escort-#{$region} & {\n\n      @if map-get($settings, type) == 'horizontal' {\n\n        @if map-get($settings, position) == 'top' {\n          top: map-get($settings, size);\n        }\n\n        @if map-get($settings, position) == 'bottom' {\n          bottom: map-get($settings, size);\n        }\n      }\n\n      @if map-get($settings, type) == 'vertical' {\n\n        @if map-get($settings, position) == 'left' {\n          left: map-get($settings, size);\n        }\n\n        @if map-get($settings, position) == 'right' {\n          right: map-get($settings, size);\n        }\n      }\n    }\n\n    /**\n     * Regions can be hidden and toggled active. If they are hidden there\n     * should be no offset.\n     */\n    .hide-escort-#{$region} & {\n\n      @if map-get($settings, type) == 'horizontal' {\n\n        @if map-get($settings, position) == 'top' {\n          top: 0;\n        }\n\n        @if map-get($settings, position) == 'bottom' {\n          bottom: 0;\n        }\n      }\n\n      @if map-get($settings, type) == 'vertical' {\n\n        @if map-get($settings, position) == 'left' {\n          left: 0;\n        }\n\n        @if map-get($settings, position) == 'right' {\n          right: 0;\n        }\n      }\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// VARIABLES\n//\n// -----------------------------------------------------------------------------\n// Table of Contents:\n//\n//   1. Colors\n//   2. Spacing/Sizes\n//   3. Typography\n//   3. Breakpoints\n\n\n/////////////////////\n// 1. Colors\n// ---------\n\n$primary-color: #1c98c1;\n$secondary-color: #ec4431;\n\n$bg-color-top: #2b2b2b;\n$bg-color-bottom: #2b2b2b;\n$bg-color-left: #f0f0f0;\n$bg-color-right: #f0f0f0;\n\n$white: #fff;\n$black: #111;\n\n\n/////////////////////\n// 2. Spacing/Sizes\n// ---------\n\n$base-size: 3.25rem;\n$base-size-active: $base-size * 6;\n\n$base-padding: 1em;\n$base-margin: 1em;\n$padding: 1em;\n$margin: 1em;\n\n\n/////////////////////\n// 3. Typography\n// ---------\n\n$font-size: 0.9rem;\n\n$font-family: Ubuntu;\n$font-type: sans-serif;\n$font-weight: 400;\n$font-location: 'fonts/Ubuntu';\n$font-format: ttf;\n\n$font: $font-family, $font-type;\n\n/////////////////////\n// 4. Breakpoints\n// ---------\n// $breakpoints: (\n//   small: 0, // converted from \"0\"\n//   medium: 40em, // converted from \"all and (min-width: 40em)\"\n//   large: 64em, // converted from \"all and (min-width: 64em)\"\n//   xlarge: 120em, // converted from \"all and (min-width: 120em)\"\n// );\n// $breakpoint-classes: (small medium large xlarge);\n","////////////////////////////////////////////////////////////////////////////////\n// REGION\n// -----------------------------------------------------------------------------\n// Defines styles associated with all regions\n\n/**\n * Styles that apply to all escort regions.\n */\n.escort-region {\n  display: flex;\n  position: relative;\n  z-index: 10;\n  font-size: $font-size;\n\n  * {\n    box-sizing: border-box;\n  }\n\n  .escort-section {\n    display: flex;\n\n    // Make first section within region fully expanded.\n    &:first-child {\n      flex: auto;\n    }\n  }\n}\n\n/**\n * Region specific styles.\n */\n@each $region, $settings in $regions {\n\n  .escort-#{$region} {\n    background: map-get($settings, bg);\n    transition: all 300ms;\n\n    &:hover {\n\n      .escort-ops {\n        display: flex;\n      }\n    }\n\n    /**\n     * Regions can be set as hidden and as such should not be shown.\n     */\n    .hide-escort-#{$region} & {\n\n      @if map-get($settings, type) == 'horizontal' {\n\n        @if map-get($settings, position) == 'top' {\n          transform: translate(0, -100%);\n        }\n\n        @if map-get($settings, position) == 'bottom' {\n          transform: translate(0, 100%);\n        }\n      }\n\n      @if map-get($settings, type) == 'vertical' {\n\n        @if map-get($settings, position) == 'left' {\n          transform: translate(-100%, 0);\n        }\n\n        @if map-get($settings, position) == 'right' {\n          transform: translate(100%, 0);\n        }\n      }\n    }\n\n    .show-escort-mini-#{$region} & {\n      transform: translate(0, 0);\n    }\n\n    .show-escort-full-#{$region} & {\n      transform: translate(0, 0);\n\n      @if map-get($settings, type) == 'vertical' {\n        width: map-get($settings, size_full);\n      }\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// REGION Horizontal\n// -----------------------------------------------------------------------------\n// Defines styles only associated with horizontal regions\n\n@each $region, $settings in $regions {\n\n  .escort-#{$region} {\n\n    /**\n     * If region is horizontal.\n     */\n    @if map-get($settings, type) == 'horizontal' {\n      position: absolute;\n      left: 0;\n      right: 0;\n      height: map-get($settings, size);\n      width: 100%;\n      z-index: 10;\n\n      @if map-get($settings, position) == 'top' {\n        top: 0;\n        border-bottom: 1px solid scale-color($bg-color-top, $lightness: -10%);\n        color: smart-scale($bg-color-top);\n      }\n\n      @if map-get($settings, position) == 'bottom' {\n        bottom: 0;\n        border-top: 1px solid scale-color($bg-color-bottom, $lightness: -10%);\n        color: smart-scale($bg-color-bottom);\n      }\n\n      &.icon-only {\n\n        .escort-link.has-icon .escort-content {\n          margin: 0;\n          display: none;\n        }\n      }\n\n      /**\n       * Horizontal sections\n       */\n      .escort-section {\n\n        &:first-child {\n\n          .escort-item {\n            border-left: 0;\n          }\n        }\n\n        &:last-child {\n\n          .escort-item {\n            border-right: 0;\n          }\n        }\n      }\n\n      /**\n       * Horizontal items\n       */\n      .escort-item {\n        line-height: map-get($settings, size);\n        padding: 0 map-get($settings, padding);\n        border-right: 1px dashed transparentize($white, 0.75);\n        border-left: 1px dashed transparentize($white, 0.75);\n        text-align: center;\n\n        &.escort-group {\n          border: 0;\n          padding: 0;\n        }\n\n        &.has-icon:not(.escort-add):not(.escort-toggle) { // sass-lint:disable-line force-pseudo-nesting\n\n          .escort-content {\n            margin-left: map-get($settings, padding) / 2;\n          }\n        }\n\n        &.escort-link:not(.escort-add) { // sass-lint:disable-line force-pseudo-nesting\n\n          &:hover {\n            background: lighten(map-get($settings, bg), 5%);\n          }\n        }\n\n        &.is-active {\n          background: darken(map-get($settings, bg), 5%);\n        }\n      }\n\n      /**\n       * Horizontal content\n       */\n      .escort-icon {\n        \n        i {\n          font-size: $font-size * 1.5;\n          vertical-align: sub;\n        }\n      }\n\n      /**\n       * Horizontal operations\n       */\n      .escort-ops {\n        top: 100%;\n      }\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// FUNCTIONS\n//\n// -----------------------------------------------------------------------------\n// Table of Contents:\n//\n//   1. Setting\n//\t 2. Smart Scale\n\n\n/////////////////////\n// 1. Setting\n// Retrieve setting from the regions map.\n// ---------\n\n@function setting($keys...) {\n  $map: $regions;\n  @each $key in $keys {\n    $map: map-get($map, $key);\n  }\n  @return $map;\n}\n\n\n/////////////////////\n// 2. Smart Scale\n// Scales a color to be darker if it's light, or lighter if it's dark.\n// ---------\n\n@function smart-scale($color, $scale: 75%, $threshold: 50%) {\n  @if lightness($color) > $threshold {\n    $scale: -$scale;\n  }\n  @return scale-color($color, $lightness: $scale);\n}\n","////////////////////////////////////////////////////////////////////////////////\n// REGION VERTICAL\n// -----------------------------------------------------------------------------\n// Defines styles only associated with vertical regions\n\n@each $region, $settings in $regions {\n\n  .escort-#{$region} {\n\n    /**\n     * If region is vertical.\n     */\n    @if map-get($settings, type) == 'vertical' {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      width: map-get($settings, size);\n      flex-direction: column;\n      overflow: hidden;\n      z-index: 5;\n      font-size: $font-size * 1.1;\n\n      @if map-get($settings, position) == 'left' {\n        left: 0;\n        border-right: 1px solid scale-color($bg-color-left, $lightness: -10%);\n        color: smart-scale($bg-color-left);\n      }\n\n      @if map-get($settings, position) == 'right' {\n        right: 0;\n        border-left: 1px solid scale-color($bg-color-right, $lightness: -10%);\n        color: smart-scale($bg-color-right);\n      }\n\n      /**\n       * Vertical sections\n       */\n      .escort-section {\n        flex-direction: column;\n\n        &:first-child {\n\n          .escort-item {\n            border-top: 0;\n          }\n        }\n\n        &:last-child {\n\n          .escort-item {\n            border-bottom: 0;\n          }\n        }\n      }\n\n      /**\n       * Vertical items\n       */\n      .escort-item {\n        padding: map-get($settings, padding) 0;\n        width: map-get($settings, size_full);\n\n        &.escort-group {\n          display: block;\n          border: 0;\n          padding: 0;\n        }\n      }\n\n      /**\n       * Vertical icons\n       */\n      .escort-icon {\n        width: $base-size;\n        text-align: center;\n        vertical-align: super;\n\n        i {\n          font-size: $font-size * 1.75;\n          vertical-align: sub;\n        }\n      }\n\n      /**\n       * Vertical operations\n       */\n      .escort-ops {\n        right: 0;\n      }\n\n      /**\n       * Vertical regions can be offset by horizontal regions. We loop through\n       * all regions again, and add offset.\n       */\n      @each $r, $s in $regions {\n\n        @if map-get($s, type) == 'horizontal' {\n\n          @if map-get($s, position) == 'top' {\n            .has-escort-#{$r}:not(.hide-escort-#{$r}) & { // sass-lint:disable-line force-pseudo-nesting\n              top: map-get($s, size);\n            }\n          }\n\n          @if map-get($s, position) == 'bottom' {\n            .has-escort-#{$r}:not(.hide-escort-#{$r}) &, // sass-lint:disable-line force-pseudo-nesting\n            .show-escort-mini-#{$r} &,\n            .show-escort-full-#{$r} & {\n              bottom: map-get($s, size);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// ITEM\n// -----------------------------------------------------------------------------\n// Styles that apply globally to escort items. All position-specific styles \n// should be added in the region specific style section.\n\n.escort-item {\n  transition: all 300ms;\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n\n  > div {\n    display: flex;\n  }\n\n  .escort-content {\n    display: flex;\n  }\n\n  // Link elements\n  &.escort-link {\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n  // Drag\n  .escort-drag {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    text-indent: -1000px;\n    cursor: move;\n  }\n\n  // Operations\n  .escort-ops {\n    position: absolute;\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    line-height: normal;\n  }\n}\n\n@each $region, $settings in $regions {\n\n  .escort-#{$region} {\n\n    /**\n     * If region is horizontal.\n     */\n    @if map-get($settings, type) == 'horizontal' {\n\n      @if map-get($settings, position) == 'top' {\n\n        .escort-item {\n          justify-content: center;\n        }\n\n        .escort-content {\n          text-shadow: 0 1px 2px adjust-color($bg-color-top, $lightness: -15%);\n        }\n      }\n\n      @if map-get($settings, position) == 'bottom' {\n        .escort-content {\n          text-shadow: 0 1px 2px scale-color($bg-color-bottom, $lightness: -15%);\n        }\n      }\n    }\n\n    /**\n     * If region is vertical.\n     */\n    @if map-get($settings, type) == 'vertical' {\n\n      @if map-get($settings, position) == 'left' {\n        .escort-content {\n          text-shadow: 0 1px 2px scale-color($bg-color-left, $lightness: -15%);\n        }\n      }\n\n      @if map-get($settings, position) == 'right' {\n        .escort-content {\n          text-shadow: 0 1px 2px scale-color($bg-color-right, $lightness: -15%);\n        }\n      }\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// ADMIN\n// -----------------------------------------------------------------------------\n// Styles applied when in admin mode.\n\n.is-escort-admin {\n\n  @each $region, $settings in $regions {\n\n    /**\n     * In admin mode we want the vertical panels expanded by default\n     */\n    .escort-#{$region} {\n\n      @if map-get($settings, type) == 'vertical' {\n        width: map-get($settings, size_full);\n      }\n    }\n\n    /**\n     * In admin mode we want elements fully expanded so the wrapper needs to accomodate\n     */\n    &.has-escort-#{$region} {\n\n      .escort-wrapper {\n\n        @if map-get($settings, type) == 'vertical' {\n\n          @if map-get($settings, position) == 'left' {\n            left: map-get($settings, size_full);\n          }\n\n          @if map-get($settings, position) == 'right' {\n            right: map-get($settings, size_full);\n          }\n        }\n      }\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// MIXINS\n//\n// -----------------------------------------------------------------------------\n// Table of Contents:\n//\n//   1. Gradient\n//   2. Button\n//   3. Font Face\n\n\n/////////////////////\n// 1. Gradient\n// Creates a gradient with backup color;\n// ---------\n@mixin linear-gradient($color1, $color2, $direction, $amount1: 0%, $amount2: 100%) {\n  background-color: $color1; /* Old browsers */\n  background: linear-gradient(to $direction, $color1 $amount1, $color2 $amount2);\n}\n\n@mixin radial-gradient($center, $edge) {\n  background-color: $edge;\n  background: radial-gradient(ellipse at center, $center $amount1, $edge $amount2);\n}\n\n/////////////////////\n// 2. Button\n// Defines base button styles\n// ---------\n@mixin button-base {\n  @include linear-gradient($primary-color, darken($primary-color, 8%), bottom);\n  display: inline-block;\n  border-radius: 3px;\n  color: smart-scale($primary-color, $scale: 100%);\n  padding: 0 ($padding * 0.66);\n  min-height: $base-size * 0.5;\n  line-height: $font-size * 1.5;\n  text-shadow: none;\n  transition: background-color 300ms, color 300ms, box-shadow 300ms;\n\n  &:visited,\n  &:active,\n  &:focus {\n    color: smart-scale($primary-color, $scale: 100%);\n  }\n\n  &:hover {\n    @include linear-gradient(lighten($primary-color, 5%), $primary-color, bottom);\n    color: $white;\n    cursor: pointer;\n  }\n}\n\n//////////////////\n//button\n@mixin button($region: null, $outline: false) {\n  @include button-base;\n\n  @if $outline == true {\n    background-color: transparent;\n    color: smart-scale($primary-color, $scale: 100%);\n\n    &:visited,\n    &:active,\n    &:focus {\n      color: smart-scale($primary-color, $scale: 100%);\n    }\n\n    &:hover {\n      background-color: lighten($primary-color, 10%);\n      color: smart-scale($primary-color, $scale: 50%);\n    }\n  }\n\n  @if $region == 'top' {\n    box-shadow: 0 1px 10px adjust-color($bg-color-top, $saturation: 0%, $lightness: -25%);\n\n    &:hover {\n      box-shadow: 0 3px 15px adjust-color($bg-color-top, $saturation: 0%, $lightness: -50%);\n    }\n  }\n\n  @if $region == 'bottom' {\n    box-shadow: 0 1px 10px adjust-color($bg-color-bottom, $saturation: 0%, $lightness: -25%);\n\n    &:hover {\n      box-shadow: 0 3px 15px adjust-color($bg-color-bottom, $saturation: 0%, $lightness: -50%);\n    }\n  }\n\n  @if $region == 'left' {\n    box-shadow: 0 1px 10px adjust-color($bg-color-left, $saturation: 0%, $lightness: -25%);\n\n    &:hover {\n      box-shadow: 0 3px 15px adjust-color($bg-color-left, $saturation: 0%, $lightness: -50%);\n    }\n  }\n\n  @if $region == 'right' {\n    box-shadow: 0 1px 10px adjust-color($bg-color-right, $saturation: 0%, $lightness: -25%);\n\n    &:hover {\n      box-shadow: 0 3px 15px adjust-color($bg-color-right, $saturation: 0%, $lightness: -50%);\n    }\n  }\n  @content;\n}\n\n/////////////////////\n// 3. Font Face\n// Generates the proper font styles from a linked font file(s)\n// ---------\n@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {\n  $src: null;\n\n  $extmods: (\n    eot: '?',\n    svg: '#' + str-replace($name, ' ', '_')\n  );\n\n  $formats: (\n    otf: 'opentype',\n    ttf: 'truetype'\n  );\n\n  @each $ext in $exts {\n    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\n    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\n    $src: append($src, url(quote($path + '.' + $extmod)) format(quote($format)), comma);\n  }\n\n  @font-face {\n    font-family: quote($name);\n    font-style: $style;\n    font-weight: $weight;\n    src: $src;\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// TYPOGRAPHY\n// -----------------------------------------------------------------------------\n// Defines fonts, weights, and other character specific styles\n\n@include font-face($font-family, $font-location, $font-weight, normal, $font-format);\n\n.escort-region {\n  font-family: $font;\n  font-size: $font-size;\n\n  a {\n    cursor: pointer;\n    text-decoration: none;\n    color: $primary-color;\n    transition: color 300ms, border 300ms, background-color 300ms, padding 300ms;\n    border: 0;\n    outline: none;\n\n    &:hover {\n      color: $secondary-color;\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// ADD\n// -----------------------------------------------------------------------------\n// Styles for add escort widget button on the admin page\n\n.escort-add {\n  border: 0 !important;\n  justify-content: center;\n\n  .escort-icon {\n\n    i {\n      font-size: $font-size * 0.75;\n      vertical-align: sub !important;\n    }\n  }\n}\n\n@each $region, $settings in $regions {\n\n  .escort-#{$region} {\n\n    /**\n     * If region is horizontal.\n     */\n    @if map-get($settings, type) == 'horizontal' {\n\n      .escort-add {\n\n        > div {\n\n          @if map-get($settings, position) == 'top' {\n            @include button($region: top);\n          }\n\n          @if map-get($settings, position) == 'bottom' {\n            @include button($region: bottom);\n          }\n        }\n\n        i {\n          line-height: $font-size;\n        }\n      }\n    }\n\n    /**\n     * If region is vertical.\n     */\n    @if map-get($settings, type) == 'vertical' {\n\n      .escort-add {\n\n        > div {\n\n          @if map-get($settings, position) == 'left' {\n            @include button($region: left);\n          }\n\n          @if map-get($settings, position) == 'right' {\n            @include button($region: right);\n          }\n        }\n      }\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// Icon\n// -----------------------------------------------------------------------------\n// Defines styles associated with all regions\n\n/**\n * Styles that apply to all escort regions.\n */\n// .escort-icon {\n\n//   i {\n//     vertical-align: middle;\n//   }\n// }\n\n@each $region, $settings in $regions {\n\n  .escort-#{$region} {\n\n    /**\n     * If region is horizontal.\n     */\n    @if map-get($settings, type) == 'horizontal' {\n      .escort-icon {\n\n        i {\n          vertical-align: middle;\n        }\n      }\n    }\n\n    /**\n     * If region is vertical.\n     */\n    @if map-get($settings, type) == 'vertical' {\n\n      .escort-icon {\n\n        i {\n          vertical-align: middle;\n        }\n      }\n    }\n  }\n}\n",".escort-ops {\n  display: none;\n\n  li {\n    display: inline-flex;\n  }\n\n  a {\n    @include button($outline: true);\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// Toggle\n// -----------------------------------------------------------------------------\n// Styles for toggle regions\n\n.escort-item {\n\n  // Toggle elements\n  &.escort-toggle {\n    justify-content: center;\n\n    @each $region, $settings in $regions {\n\n      &[data-region='#{$region}'] {\n\n        @if map-get($settings, type) == 'vertical' {\n          width: $base-size;\n        }\n\n        // The active state of the MINI region toggle.\n        .show-escort-mini-#{$region} & {\n          color: $primary-color;\n        }\n\n        // The active state of the FULL region toggle.\n        .show-escort-full-#{$region} & {\n          color: $primary-color;\n        }\n      }\n    }\n  }\n}\n"]}