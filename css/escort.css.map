{"version":3,"sources":["base/_wrapper.scss","utils/_variables.scss","base/_region.scss","base/_item.scss","base/_admin.scss"],"names":[],"mappings":"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","file":"escort.css","sourcesContent":["////////////////////////////////////////////////////////////////////////////////\n// WRAPPER\n// -----------------------------------------------------------------------------\n// Defines toolbar layout and basic interactivity\n\n/**\n * hide overflow on the body\n */\n.has-escort {\n  overflow: hidden;\n}\n\n/**\n * The wrapper around the content of the page. The escort regions exists as\n * siblings to this element.\n */\n.escort-wrapper-scroll {\n  position: relative;\n  z-index: 100;\n  background: $white;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  -webkit-overflow-scrolling: touch; // sass-lint:disable-line no-misspelled-properties\n}\n\n.escort-wrapper {\n  z-index: 0;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  height: auto;\n\n  @each $region, $settings in $regions {\n\n    /**\n     * Offset the main content area based on the size of each escort region\n     * unless the region is set as hidden (deterined based on the\n     * body.hide-escort-?).\n     */\n    .has-escort-#{$region} & {\n\n      @if map-get($settings, type) == 'horizontal' {\n\n        @if map-get($settings, position) == 'top' {\n          top: map-get($settings, size);\n        }\n\n        @if map-get($settings, position) == 'bottom' {\n          bottom: map-get($settings, size);\n        }\n      }\n\n      @if map-get($settings, type) == 'vertical' {\n\n        @if map-get($settings, position) == 'left' {\n          left: map-get($settings, size);\n        }\n\n        @if map-get($settings, position) == 'right' {\n          right: map-get($settings, size);\n        }\n      }\n    }\n\n    /**\n     * Regions can be hidden and toggled active. If they are hidden there\n     * should be no offset.\n     */\n    .hide-escort-#{$region} & {\n\n      @if map-get($settings, type) == 'horizontal' {\n\n        @if map-get($settings, position) == 'top' {\n          top: 0;\n        }\n\n        @if map-get($settings, position) == 'bottom' {\n          bottom: 0;\n        }\n      }\n\n      @if map-get($settings, type) == 'vertical' {\n\n        @if map-get($settings, position) == 'left' {\n          left: 0;\n        }\n\n        @if map-get($settings, position) == 'right' {\n          right: 0;\n        }\n      }\n    }\n\n    /**\n     * In admin mode we want elements fully expanded.\n     */\n    .is-escort-admin.has-escort-#{$region} & {\n\n      @if map-get($settings, type) == 'vertical' {\n\n        @if map-get($settings, position) == 'left' {\n          left: map-get($settings, size_full);\n        }\n\n        @if map-get($settings, position) == 'right' {\n          right: map-get($settings, size_full);\n        }\n      }\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// VARIABLES\n//\n// -----------------------------------------------------------------------------\n// Table of Contents:\n//\n//   1. Colors\n//   2. Spacing/Sizes\n//   3. Breakpoints\n\n\n/////////////////////\n// 1. Colors\n// ---------\n\n$primary-color: #4190e7;\n$secondary-color: #34b8e3;\n$bg-color: #2e2f2f;\n$bg-alt-color: #f3f3f3;\n\n$white: #fff;\n$white-30: rgba($white, 0.3);\n$black: #111;\n$black-30: rgba($black, 0.3);\n$primary: #4190e7;\n\n\n/////////////////////\n// 2. Spacing/Sizes\n// ---------\n$base-size: 3.5rem;\n$base-size-active: $base-size * 6;\n$base-padding: 1rem;\n$base-margin: 1rem;\n$padding: 1em;\n$margin: 1em;\n\n$regions: (\n  top: (\n    'type': 'horizontal',\n    'position': 'top',\n    'size': $base-size,\n    'bg': $bg-color,\n    'padding': $base-padding,\n  ),\n  bottom: (\n    'type': 'horizontal',\n    'position': 'bottom',\n    'size': $base-size,\n    'bg': $bg-color,\n    'padding': $base-padding,\n  ),\n  left: (\n    'type': 'vertical',\n    'position': 'left',\n    'size': $base-size,\n    'size_full': $base-size-active,\n    'bg': $bg-alt-color,\n    'padding': $base-padding,\n  ),\n  right: (\n    'type': 'vertical',\n    'position': 'right',\n    'size': $base-size,\n    'size_full': $base-size-active,\n    'bg': $bg-alt-color,\n    'padding': $base-padding,\n  ),\n);\n\n\n/////////////////////\n// 2. Breakpoints\n// ---------\n// $breakpoints: (\n//   small: 0, // converted from \"0\"\n//   medium: 40em, // converted from \"all and (min-width: 40em)\"\n//   large: 64em, // converted from \"all and (min-width: 64em)\"\n//   xlarge: 120em, // converted from \"all and (min-width: 120em)\"\n// );\n// $breakpoint-classes: (small medium large xlarge);\n","////////////////////////////////////////////////////////////////////////////////\n// REGION\n// -----------------------------------------------------------------------------\n// Region specific layout and styles\n\n/**\n * Styles that apply to all escort regions.\n */\n.escort-region {\n  display: flex;\n  position: relative;\n  z-index: 10;\n\n  * {\n    box-sizing: border-box;\n  }\n\n  .escort-section {\n    display: flex;\n\n    // Make first section within region fully expanded.\n    &:first-child {\n      flex: auto;\n    }\n  }\n}\n\n/**\n * Region specific styles.\n */\n@each $region, $settings in $regions {\n\n  .escort-#{$region} {\n    background: map-get($settings, bg);\n    color: $white;\n    transition: all 300ms;\n\n    .escort-ops {\n      display: none;\n    }\n\n    &:hover {\n\n      .escort-ops {\n        display: block;\n      }\n    }\n\n    /**\n     * If region is horizontal.\n     */\n    @if map-get($settings, type) == 'horizontal' {\n      position: absolute;\n      left: 0;\n      right: 0;\n      height: map-get($settings, size);\n      width: 100%;\n      z-index: 10;\n\n      @if map-get($settings, position) == 'top' {\n        top: 0;\n      }\n\n      @if map-get($settings, position) == 'bottom' {\n        bottom: 0;\n      }\n\n      &.icon-only {\n\n        .escort-link .escort-content {\n          margin: 0;\n          display: none;\n        }\n      }\n\n      /**\n       * Horizontal sections\n       */\n      .escort-section {\n\n        &:first-child {\n\n          .escort-item {\n            border-left: 0;\n          }\n        }\n\n        &:last-child {\n\n          .escort-item {\n            border-right: 0;\n          }\n        }\n      }\n\n      /**\n       * Horizontal items\n       */\n      .escort-item {\n        line-height: map-get($settings, size);\n        padding: 0 map-get($settings, padding);\n        border-right: 1px dotted $white-30;\n        border-left: 1px dotted $white-30;\n\n        &.escort-group {\n          border: 0;\n          padding: 0;\n        }\n\n        &.has-icon {\n\n          .escort-content {\n            margin-left: map-get($settings, padding) / 2;\n          }\n        }\n\n        &.escort-link {\n\n          &:hover {\n            background: lighten(map-get($settings, bg), 5%);\n          }\n        }\n\n        &.is-active {\n          background: darken(map-get($settings, bg), 5%);\n        }\n      }\n\n      /**\n       * Horizontal content\n       */\n      .escort-content {\n        display: flex;\n      }\n\n      /**\n       * Horizontal operations\n       */\n      .escort-ops {\n        top: 100%;\n      }\n    }\n\n    /**\n     * If region is vertical.\n     */\n    @if map-get($settings, type) == 'vertical' {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      width: map-get($settings, size);\n      flex-direction: column;\n      overflow: hidden;\n      z-index: 5;\n\n      @if map-get($settings, position) == 'left' {\n        left: 0;\n      }\n\n      @if map-get($settings, position) == 'right' {\n        right: 0;\n        // order: 10;\n      }\n\n      /**\n       * Vertical sections\n       */\n      .escort-section {\n        flex-direction: column;\n\n        &:first-child {\n\n          .escort-item {\n            border-top: 0;\n          }\n        }\n\n        &:last-child {\n\n          .escort-item {\n            border-bottom: 0;\n          }\n        }\n      }\n\n      /**\n       * Vertical items\n       */\n      .escort-item {\n        padding: map-get($settings, padding) 0;\n        width: map-get($settings, size_full);\n        border-top: 1px dotted $black-30;\n        border-bottom: 1px dotted $black-30;\n\n        &.escort-group {\n          display: block;\n          border: 0;\n          padding: 0;\n        }\n      }\n\n      /**\n       * Vertical icons\n       */\n      .escort-icon {\n        width: map-get($settings, size);\n        text-align: center;\n      }\n\n      /**\n       * Vertical operations\n       */\n      .escort-ops {\n        right: 0;\n      }\n\n      /**\n       * Vertical regions can be offset by horizontal regions. We loop through\n       * all regions again, and add offset.\n       */\n      @each $r, $s in $regions {\n\n        @if map-get($s, type) == 'horizontal' {\n\n          @if map-get($s, position) == 'top' {\n            .has-escort-#{$r}:not(.hide-escort-#{$r}) & { // sass-lint:disable-line force-pseudo-nesting\n              top: map-get($s, size);\n            }\n          }\n\n          @if map-get($s, position) == 'bottom' {\n            .has-escort-#{$r}:not(.hide-escort-#{$r}) &, // sass-lint:disable-line force-pseudo-nesting\n            .show-escort-mini-#{$r} &,\n            .show-escort-full-#{$r} & {\n              bottom: map-get($s, size);\n            }\n          }\n        }\n      }\n    }\n\n    /**\n     * Regions can be set as hidden and as such should not be shown.\n     */\n    .hide-escort-#{$region} & {\n\n      @if map-get($settings, type) == 'horizontal' {\n\n        @if map-get($settings, position) == 'top' {\n          transform: translate(0, -100%);\n        }\n\n        @if map-get($settings, position) == 'bottom' {\n          transform: translate(0, 100%);\n        }\n      }\n\n      @if map-get($settings, type) == 'vertical' {\n\n        @if map-get($settings, position) == 'left' {\n          transform: translate(-100%, 0);\n        }\n\n        @if map-get($settings, position) == 'right' {\n          transform: translate(100%, 0);\n        }\n      }\n    }\n\n    .show-escort-mini-#{$region} & {\n      transform: translate(0, 0);\n    }\n\n    .show-escort-full-#{$region} & {\n      transform: translate(0, 0);\n\n      @if map-get($settings, type) == 'vertical' {\n        width: map-get($settings, size_full);\n      }\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// ITEM\n// -----------------------------------------------------------------------------\n// Styles that apply globally to escort items. All position-specific styles \n// should be added in the region specific style section.\n\n.escort-item {\n  display: flex;\n  transition: all 300ms;\n  position: relative;\n\n  // Link elements\n  &.escort-link {\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n  // Toggle elements\n  &.escort-toggle {\n    justify-content: center;\n\n    @each $region, $settings in $regions {\n\n      &[data-region='#{$region}'] {\n\n        @if map-get($settings, type) == 'vertical' {\n          width: map-get($settings, size);\n        }\n\n        // The active state of the MINI region toggle.\n        .show-escort-mini-#{$region} & {\n          color: $primary;\n        }\n\n        // The active state of the FULL region toggle.\n        .show-escort-full-#{$region} & {\n          color: $primary;\n        }\n      }\n    }\n  }\n\n  // Drag\n  .escort-drag {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    text-indent: -1000px;\n    cursor: move;\n  }\n\n  // Operations\n  .escort-ops {\n    position: absolute;\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    line-height: normal;\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// ADMIN\n// -----------------------------------------------------------------------------\n// Styles applied when in admin mode.\n\n.is-escort-admin {\n\n  @each $region, $settings in $regions {\n\n    .escort-#{$region} {\n\n      @if map-get($settings, type) == 'vertical' {\n        width: map-get($settings, size_full);\n      }\n    }\n\n    // .escort-wrapper {\n\n    //   @if map-get($settings, position) == 'left' {\n    //     left: map-get($settings, size_full);\n    //   }\n\n    //   @if map-get($settings, position) == 'right' {\n    //     right: map-get($settings, size_full) !important;\n    //   }\n    // }\n  }\n}\n"]}