{"version":3,"sources":["utils/_placeholders.scss","utils/_functions.scss","base/_wrapper.scss","utils/_variables.scss","base/_region.scss","utils/_mixins.scss","base/_region_horizontal.scss","base/_region_vertical.scss","base/_item.scss","base/_dropdown.scss","base/_admin.scss","base/_typography.scss","components/_add.scss","components/_icon.scss","components/_ops.scss","components/_sort.scss"],"names":[],"mappings":"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","file":"escort.css","sourcesContent":["////////////////////////////////////////////////////////////////////////////////\n// Placeholders\n//\n// -----------------------------------------------------------------------------\n// Table of Contents:\n//\n//   1. Button\n\n\n/////////////////////\n// 1. Button\n// Base styles for any button type. @See button-style mixin for further styles.\n// ---------\n\n%button {\n  display: inline-flex;\n  border-radius: $border-radius;\n  color: smart-scale($primary-color, $scale: 80%);\n  padding: 0 ($padding * 0.66);\n  line-height: $font-size * 2;\n  text-shadow: none;\n  border: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  transition: background-color 300ms, color 300ms, box-shadow 300ms;\n\n  &:visited,\n  &:active,\n  &:focus {\n    color: smart-scale($primary-color, $scale: 80%);\n  }\n\n  &:hover {\n    color: smart-scale($primary-color, $scale: 100%);\n    cursor: pointer;\n    text-decoration: none;\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// FUNCTIONS\n//\n// -----------------------------------------------------------------------------\n// Table of Contents:\n//\n//   1. Setting\n//\t 2. Smart Scale\n\n\n/////////////////////\n// 1. Setting\n// Retrieve setting from the regions map.\n// ---------\n\n@function setting($keys...) {\n  $map: $regions;\n  @each $key in $keys {\n    $map: map-get($map, $key);\n  }\n  @return $map;\n}\n\n\n/////////////////////\n// 2. Smart Scale\n// Scales a color to be darker if it's light, or lighter if it's dark.\n// ---------\n\n@function smart-scale($color, $scale: 75%, $threshold: 50%) {\n  @if lightness($color) > $threshold {\n    $scale: -$scale;\n  }\n  @return scale-color($color, $lightness: $scale);\n}\n","////////////////////////////////////////////////////////////////////////////////\n// WRAPPER\n// -----------------------------------------------------------------------------\n// Defines toolbar layout and basic interactivity\n\n/**\n * hide overflow on the body\n */\n.has-escort {\n  overflow: hidden;\n}\n\n/**\n * The wrapper around the content of the page. The escort regions exists as\n * siblings to this element.\n */\n.escort-wrapper-scroll {\n  position: relative;\n  z-index: 100;\n  background: $white;\n  overflow-x: hidden;\n  -webkit-overflow-scrolling: touch; // sass-lint:disable-line no-misspelled-properties\n}\n\n.escort-wrapper {\n  z-index: 0;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  height: auto;\n\n  /**\n     * Offset the main content area based on the size of each escort region\n     * unless the region is set as hidden (deterined based on the\n     * body.hide-escort-?).\n     */\n  @each $region, $settings in $regions {\n\n    .has-escort-#{$region} & {\n\n      @if map-get($settings, type) == 'horizontal' {\n\n        @if map-get($settings, position) == 'top' {\n          top: map-get($settings, size);\n        }\n\n        @if map-get($settings, position) == 'bottom' {\n          bottom: map-get($settings, size);\n        }\n      }\n\n      @if map-get($settings, type) == 'vertical' {\n\n        @if map-get($settings, position) == 'left' {\n          left: map-get($settings, size);\n        }\n\n        @if map-get($settings, position) == 'right' {\n          right: map-get($settings, size);\n        }\n      }\n    }\n\n    /**\n     * Regions can be hidden and toggled active. If they are hidden there\n     * should be no offset.\n     */\n    .hide-escort-#{$region} & {\n\n      @if map-get($settings, type) == 'horizontal' {\n\n        @if map-get($settings, position) == 'top' {\n          top: 0;\n        }\n\n        @if map-get($settings, position) == 'bottom' {\n          bottom: 0;\n        }\n      }\n\n      @if map-get($settings, type) == 'vertical' {\n\n        @if map-get($settings, position) == 'left' {\n          left: 0;\n        }\n\n        @if map-get($settings, position) == 'right' {\n          right: 0;\n        }\n      }\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// VARIABLES\n//\n// -----------------------------------------------------------------------------\n// Table of Contents:\n//\n//   1. Colors\n//   2. Spacing/Sizes\n//   3. Typography\n//   3. Breakpoints\n\n\n/////////////////////\n// 1. Colors\n// ---------\n\n$primary-color: #1c98c1;\n$secondary-color: #ec4431;\n\n$bg-color-top: #2b2b2b;\n$bg-color-bottom: #2b2b2b;\n$bg-color-left: #f0f0f0;\n$bg-color-right: #f0f0f0;\n\n$white: #fff;\n$black: #111;\n\n\n/////////////////////\n// 2. Spacing/Sizes\n// ---------\n\n$base-size: 3.25rem;\n$base-size-active: $base-size * 6;\n\n$base-padding: 1em;\n$base-margin: 1em;\n$padding: 1em;\n$margin: 1em;\n$border-radius: 3px;\n\n\n/////////////////////\n// 3. Typography\n// ---------\n\n$font-size: 0.92rem;\n\n$font-family: Ubuntu;\n$font-type: sans-serif;\n$font-weight: 400;\n$font-location: 'fonts/Ubuntu';\n$font-format: ttf;\n\n$font: $font-family, $font-type;\n\n/////////////////////\n// 4. Breakpoints\n// ---------\n// $breakpoints: (\n//   small: 0, // converted from \"0\"\n//   medium: 40em, // converted from \"all and (min-width: 40em)\"\n//   large: 64em, // converted from \"all and (min-width: 64em)\"\n//   xlarge: 120em, // converted from \"all and (min-width: 120em)\"\n// );\n// $breakpoint-classes: (small medium large xlarge);\n","////////////////////////////////////////////////////////////////////////////////\n// REGION\n// -----------------------------------------------------------------------------\n// Defines styles associated with all regions\n\n/**\n * Styles that apply to all escort regions.\n */\n.escort-region {\n  display: block;\n  position: relative;\n  z-index: 10;\n  font-size: $font-size;\n  transition: all 300ms;\n\n  * {\n    box-sizing: border-box;\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// MIXINS\n//\n// -----------------------------------------------------------------------------\n// Table of Contents:\n//\n//   1. Get Region\n//   2. Gradient\n//   3. Button\n//   4. Font Face\n//   5. Ripple\n//   6. CSS Triangle\n\n\n/////////////////////\n// 1. Get Region\n// Retrieve Region for specific styles. $type => both, horizontal, vertical. $regions => top, bottom, left, right\n// ---------\n\n@mixin get-location($type: 'both', $region: 'both') {\n\n  @if ($type == 'both') and ($region == 'both') {\n\n    .escort-region {\n      @content;\n    }\n  }\n\n  @if $type == 'horizontal' {\n\n    @if $region == 'both' {\n      .escort-top,\n      .escort-bottom {\n        @content;\n      }\n    } \n\n    @if $region == 'top' {\n      .escort-top {\n        @content;\n      }\n    }\n\n    @if $region == 'bottom' {\n      .escort-bottom {\n        @content;\n      }\n    }\n  }\n\n  @if $type == 'vertical' {\n\n    @if $region == 'both' {\n      .escort-left,\n      .escort-right {\n        @content;\n      }\n    } \n\n    @if $region == 'left' {\n      .escort-left {\n        @content;\n      }\n    }\n\n    @if $region == 'right' {\n      .escort-right {\n        @content;\n      }\n    }\n  }\n}\n\n/////////////////////\n// 2. Gradient\n// Creates a gradient with backup color;\n// ---------\n@mixin linear-gradient($color1, $color2, $direction, $amount1: 0%, $amount2: 100%) {\n  background-color: $color1; /* Old browsers */\n  background: linear-gradient(to $direction, $color1 $amount1, $color2 $amount2);\n}\n\n@mixin radial-gradient($center, $edge) {\n  background-color: $edge;\n  background: radial-gradient(ellipse at center, $center $amount1, $edge $amount2);\n}\n\n/////////////////////\n// 3. Button\n// Defines base button styles\n// ---------\n@mixin button-style($region, $transparent: false) {\n  @include linear-gradient($primary-color, darken($primary-color, 8%), bottom);\n  color: smart-scale($primary-color, $scale: 66%);\n\n  &:hover {\n    @include linear-gradient(lighten($primary-color, 5%), $primary-color, bottom);\n  }\n\n  @if $region == 'top' {\n    box-shadow: 0 1px 10px adjust-color($bg-color-top, $saturation: 0%, $lightness: -20%);\n\n    &:hover {\n      box-shadow: 0 3px 15px adjust-color($bg-color-top, $saturation: 0%, $lightness: -40%);\n    }\n\n    @if $transparent == true {\n      @include linear-gradient(rgba(smart-scale($bg-color-top), 0.1), rgba(smart-scale($bg-color-top), 0.33), bottom);\n      color: smart-scale($bg-color-top, $scale: 50%);\n\n      &:visited,\n      &:active,\n      &:focus {\n        color: smart-scale($bg-color-top, $scale: 50%);\n      }\n\n      &:hover {\n        background-color: lighten($primary-color, 10%);\n        color: smart-scale($bg-color-top, $scale: 100%);\n      }\n    }\n  }\n\n  @if $region == 'bottom' {\n    box-shadow: 0 1px 10px adjust-color($bg-color-bottom, $saturation: 0%, $lightness: -20%);\n\n    &:hover {\n      box-shadow: 0 3px 15px adjust-color($bg-color-bottom, $saturation: 0%, $lightness: -40%);\n    }\n\n    @if $transparent == true {\n      @include linear-gradient(rgba(smart-scale($bg-color-bottom), 0.1), rgba(smart-scale($bg-color-bottom), 0.33), bottom);\n      color: smart-scale($primary-color, $scale: 50%);\n\n      &:visited,\n      &:active,\n      &:focus {\n        color: smart-scale($primary-color, $scale: 100%);\n      }\n\n      &:hover {\n        background-color: lighten($primary-color, 10%);\n        color: smart-scale($primary-color, $scale: 50%);\n      }\n    }\n  }\n\n  @if $region == 'left' {\n    box-shadow: 0 1px 10px adjust-color($bg-color-left, $saturation: 0%, $lightness: -20%);\n\n    &:hover {\n      box-shadow: 0 3px 15px adjust-color($bg-color-left, $saturation: 0%, $lightness: -40%);\n    }\n\n    @if $transparent == true {\n      @include linear-gradient(rgba(smart-scale($bg-color-left), 0.1), rgba(smart-scale($bg-color-left), 0.33), bottom);\n      color: smart-scale($bg-color-left, $scale: 50%);\n\n      &:visited,\n      &:active,\n      &:focus {\n        color: smart-scale($bg-color-left, $scale: 50%);\n      }\n\n      &:hover {\n        background-color: lighten($primary-color, 10%);\n        color: smart-scale($primary-color, $scale: 80%);\n\n        a {\n          color: smart-scale($primary-color, $scale: 80%);\n        }\n      }\n    }\n  }\n\n  @if $region == 'right' {\n    box-shadow: 0 1px 10px adjust-color($bg-color-right, $saturation: 0%, $lightness: -20%);\n\n    &:hover {\n      box-shadow: 0 3px 15px adjust-color($bg-color-right, $saturation: 0%, $lightness: -40%);\n    }\n\n    @if $transparent == true {\n      @include linear-gradient(rgba(smart-scale($bg-color-right), 0.1), rgba(smart-scale($bg-color-right), 0.33), bottom);\n      color: smart-scale($primary-color, $scale: 50%);\n\n      &:visited,\n      &:active,\n      &:focus {\n        color: smart-scale($primary-color, $scale: 100%);\n      }\n\n      &:hover {\n        background-color: lighten($primary-color, 10%);\n        color: smart-scale($primary-color, $scale: 80%);\n\n        a {\n          color: smart-scale($primary-color, $scale: 80%);\n        }\n      }\n    }\n  }\n\n  @content;\n}\n\n/////////////////////\n// 4. Font Face\n// Generates the proper font styles from a linked font file(s)\n// ---------\n@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {\n  $src: null;\n\n  $extmods: (\n    eot: '?',\n    svg: '#' + str-replace($name, ' ', '_')\n  );\n\n  $formats: (\n    otf: 'opentype',\n    ttf: 'truetype'\n  );\n\n  @each $ext in $exts {\n    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\n    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\n    $src: append($src, url(quote($path + '.' + $extmod)) format(quote($format)), comma);\n  }\n\n  @font-face {\n    font-family: quote($name);\n    font-style: $style;\n    font-weight: $weight;\n    src: $src;\n  }\n}\n\n\n/////////////////////\n// 5. Ripple\n// Generates the proper font styles from a linked font file(s)\n// ---------\n// @include keyframes(rippleTop) {\n//   from {\n//     opacity: 1;\n//     @include transform(scale(0));\n//     background-color: $theforce-top-primary;\n//   }\n//   to {\n//     opacity: 0;\n//     @include transform(scale(2.5));\n//     background-color: transparent;\n//   }\n// }\n\n\n/////////////////////\n// 5. CSS Triangle\n// Creates a CSS triangle, which can be used for dropdown arrows, dropdown pips, and more.\n// ---------\n@mixin css-triangle($size, $color, $direction, $position) {\n\n  @if ($position == before) {\n\n    &::before {\n      display: block;\n      width: 0;\n      height: 0;\n      border: inset $size;\n      content: '';\n\n      @if ($direction == down) {\n        border-bottom-width: 0;\n        border-top-style: solid;\n        border-color: $color transparent transparent;\n      }\n      @if ($direction == up) {\n        border-top-width: 0;\n        border-bottom-style: solid;\n        border-color: transparent transparent $color;\n      }\n      @if ($direction == right) {\n        border-right-width: 0;\n        border-left-style: solid;\n        border-color: transparent transparent transparent $color;\n      }\n      @if ($direction == left) {\n        border-left-width: 0;\n        border-right-style: solid;\n        border-color: transparent $color transparent transparent;\n      }\n\n      @content;\n    }\n  }\n\n  @if ($position == after) {\n\n    &::before {\n      display: block;\n      width: 0;\n      height: 0;\n      border: inset $size;\n      content: '';\n\n      @if ($direction == down) {\n        border-bottom-width: 0;\n        border-top-style: solid;\n        border-color: $color transparent transparent;\n      }\n      @if ($direction == up) {\n        border-top-width: 0;\n        border-bottom-style: solid;\n        border-color: transparent transparent $color;\n      }\n      @if ($direction == right) {\n        border-right-width: 0;\n        border-left-style: solid;\n        border-color: transparent transparent transparent $color;\n      }\n      @if ($direction == left) {\n        border-left-width: 0;\n        border-right-style: solid;\n        border-color: transparent $color transparent transparent;\n      }\n\n      @content;\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// REGION Horizontal\n// -----------------------------------------------------------------------------\n// Defines styles only associated with horizontal regions\n\n/**\n * Top AND Bottom region only\n */\n@include get-location($type: horizontal) {\n  position: absolute;\n  left: 0;\n  right: 0;\n  height: $base-size;\n  width: 100%;\n  z-index: 10;\n  display: flex;\n  transform: translate(0, 0);\n\n  .escort-section {\n    display: inline-flex;\n\n    &:last-child {\n      margin-left: auto;\n    }\n  }\n\n  /**\n   * Horizontal sections\n   */\n  .escort-section {\n\n    &:first-child {\n\n      .escort-item {\n        border-left: 0;\n      }\n    }\n\n    &:last-child {\n\n      .escort-item {\n        border-right: 0;\n      }\n    }\n  }\n}\n\n/**\n * Top region only\n */\n@include get-location($type: horizontal, $region: top) {\n  top: 0;\n  background: $bg-color-top;\n  border-bottom: 1px solid scale-color($bg-color-top, $lightness: -10%);\n  color: smart-scale($bg-color-top);\n\n  .hide-escort-top & {\n    transform: translate(0, -100%);\n  }\n\n  .show-escort-mini-top &,\n  .show-escort-full-top & {\n    transform: translate(0, 0);\n  }\n}\n\n/**\n * Top region only\n */\n@include get-location($type: horizontal, $region: bottom) {\n  bottom: 0;\n  background: $bg-color-bottom;\n  border-top: 1px solid scale-color($bg-color-bottom, $lightness: -10%);\n  color: smart-scale($bg-color-bottom);\n\n  .hide-escort-bottom & {\n    transform: translate(0, 100%);\n  }\n\n  .show-escort-mini-bottom &,\n  .show-escort-full-bottom & {\n    transform: translate(0, 0);\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// REGION VERTICAL\n// -----------------------------------------------------------------------------\n// Defines styles only associated with vertical toolbars\n\n@include get-location($type: vertical) {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: $base-size;\n  overflow-x: hidden;\n  overflow-y: auto;\n  z-index: 5;\n  font-size: $font-size * 1.1;\n  box-shadow: 0 0 5px rgba($black, 0); // sass-lint:disable-line no-color-literals\n  transform: translate(0, 0);\n  display: flex;\n  flex-direction: column;\n\n  .escort-section {\n\n    &:last-child {\n      margin-top: auto;\n    }\n  }\n}\n\n/**\n * Left region only\n */\n@include get-location($type: vertical, $region: left) {\n  left: 0;\n  background: $bg-color-left;\n  border-right: 1px solid scale-color($bg-color-left, $lightness: -10%);\n  color: smart-scale($bg-color-left);\n\n  .hide-escort-left & {\n    transform: translate(-100%, 0);\n  }\n\n  .show-escort-mini-left &,\n  .show-escort-full-left & {\n    transform: translate(0, 0);\n  }\n\n  .show-escort-full-left & {\n    width: $base-size-active;\n    box-shadow: 0 0 15px rgba($black, 0.2); // sass-lint:disable-line no-color-literals\n  }\n}\n\n/**\n * Right region only\n */\n@include get-location($type: vertical, $region: right) {\n  right: 0;\n  background: $bg-color-right;\n  border-left: 1px solid scale-color($bg-color-right, $lightness: -10%);\n  color: smart-scale($bg-color-right);\n\n  .hide-escort-right & {\n    transform: translate(100%, 0);\n  }\n\n  .show-escort-mini-right &,\n  .show-escort-full-right & {\n    transform: translate(0, 0);\n  }\n\n  .show-escort-full-right & {\n    width: $base-size-active;\n    box-shadow: 0 0 15px rgba($black, 0.2); // sass-lint:disable-line no-color-literals\n  }\n}\n\n\n@each $region, $settings in $regions {\n\n  .escort-#{$region} {\n\n    /**\n     * If region is vertical.\n     */\n    @if map-get($settings, type) == 'vertical' {\n      \n      /**\n       * Vertical regions can be offset by horizontal regions. We loop through\n       * all regions again, and add offset.\n       */\n      @each $r, $s in $regions {\n\n        @if map-get($s, type) == 'horizontal' {\n          \n          @if map-get($s, position) == 'top' {\n            .has-escort-#{$r}:not(.hide-escort-#{$r}) &, // sass-lint:disable-line force-pseudo-nesting\n            .show-escort-mini-#{$r} &,\n            .show-escort-full-#{$r} & {\n              top: map-get($s, size);\n            }\n          }\n\n          @if map-get($s, position) == 'bottom' {\n            .has-escort-#{$r}:not(.hide-escort-#{$r}) &, // sass-lint:disable-line force-pseudo-nesting\n            .show-escort-mini-#{$r} &,\n            .show-escort-full-#{$r} & {\n              bottom: map-get($s, size);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// ITEM\n// -----------------------------------------------------------------------------\n// Styles that apply globally to escort items. All position-specific styles \n// should be added in the region specific style section.\n\n.escort-item {\n  position: relative;\n  min-width: $base-size;\n\n  > div {\n    display: block;\n    white-space: nowrap;\n  }\n}\n\n/**\n * Top AND Bottom region\n */\n@include get-location($type: horizontal) {\n\n  .escort-item {\n    line-height: $base-size;\n    padding: 0 $padding;\n    text-align: center;\n    display: block;\n    float: left;\n\n    &.escort-group {\n      border: 0;\n      padding: 0;\n    }\n\n    &.has-icon:not(.escort-add):not(.escort-toggle) { // sass-lint:disable-line force-pseudo-nesting\n\n      .escort-content {\n        margin-left: $margin / 2;\n      }\n    }\n  }\n}\n\n/**\n * Top region only\n */\n@include get-location($type: horizontal, $region: top) {\n\n  .escort-item {\n    border-right: 1px dashed smart-scale($bg-color-top, $scale: 25%);\n    border-left: 1px dashed smart-scale($bg-color-top, $scale: 25%);\n  }\n\n  .escort-link:not(.escort-add) { // sass-lint:disable-line force-pseudo-nesting\n\n    &:hover {\n      background: smart-scale($bg-color-top, $scale: -12%);\n\n      .escort-content {\n        color: smart-scale($bg-color-top, $scale: 80%);\n      }\n    }\n\n    &.is-active {\n      background: smart-scale($bg-color-top, $scale: 5%);\n    }\n  }\n\n  .escort-content {\n    color: smart-scale($bg-color-top, $scale: 60%);\n    text-shadow: 0 1px 2px adjust-color($bg-color-top, $lightness: -25%);\n  }\n}\n\n/**\n * Bottom region only\n */\n@include get-location($type: horizontal, $region: bottom) {\n\n  .escort-item {\n    border-right: 1px dashed smart-scale($bg-color-bottom, $scale: 25%);\n    border-left: 1px dashed smart-scale($bg-color-bottom, $scale: 25%);\n  }\n\n  .escort-link:not(.escort-add) { // sass-lint:disable-line force-pseudo-nesting\n\n    &:hover {\n      background: smart-scale($bg-color-bottom, $scale: -12%);\n\n      .escort-content {\n        color: smart-scale($bg-color-bottom, $scale: 80%);\n      }\n    }\n\n    &.is-active {\n      background: smart-scale($bg-color-bottom, $scale: 5%);\n    }\n  }\n\n  .escort-content {\n    color: smart-scale($bg-color-bottom, $scale: 60%);\n    text-shadow: 0 1px 2px scale-color($bg-color-bottom, $lightness: -25%);\n  }\n}\n\n/**\n * Left AND Right region only\n */\n@include get-location($type: vertical) {\n\n  .escort-item {\n    padding: $padding 0;\n    display: block;\n\n    &.escort-group {\n      display: block;\n      border: 0;\n      padding: 0;\n\n      .escort-content {\n        display: block;\n\n        .escort-content {\n          display: inline-block;\n        }\n      }\n    }\n\n    .escort-content {\n      display: inline-block;\n      line-height: $base-size / 2;\n    }\n  }\n}\n\n/**\n * Left region only\n */\n@include get-location($type: vertical, $region: left) {\n\n  .escort-item {\n    border-bottom: 1px solid rgba(smart-scale($bg-color-left), 0.2); // sass-lint:disable-line no-color-literals\n  }\n\n  .escort-link:not(.escort-add) { // sass-lint:disable-line force-pseudo-nesting\n\n    &:hover {\n\n      .escort-content {\n        color: smart-scale($bg-color-left, $scale: 80%);\n      }\n    }\n  }\n\n  .escort-content {\n    color: smart-scale($bg-color-left, $scale: 60%);\n    text-shadow: 0 1px 2px scale-color($bg-color-left, $lightness: -25%);\n  }\n}\n\n/**\n * Right region only\n */\n@include get-location($type: vertical, $region: right) {\n\n  .escort-item {\n    border-bottom: 1px solid rgba(smart-scale($bg-color-right), 0.2); // sass-lint:disable-line no-color-literals\n  }\n\n  .escort-link:not(.escort-add) { // sass-lint:disable-line force-pseudo-nesting\n\n    &:hover {\n\n      .escort-content {\n        color: smart-scale($bg-color-right, $scale: 80%);\n      }\n    }\n  }\n\n  .escort-content {\n    color: smart-scale($bg-color-right, $scale: 60%);\n    text-shadow: 0 1px 2px scale-color($bg-color-right, $lightness: -25%);\n  }\n}\n","\n.escort-dropdown {\n  position: relative;\n\n  .escort-dropdown-content {\n    width: 300px;\n    background: $bg-color-top;\n    padding: $base-padding;\n    border: 0;\n    display: none;\n\n    > div {\n      white-space: normal;\n      line-height: normal;\n    }\n  }\n\n  &.escort-active {\n\n    .escort-dropdown-content {\n      display: block;\n    }\n  }\n}\n\n/**\n * Top AND Bottom region\n */\n@include get-location($type: horizontal) {\n\n  .escort-dropdown-content {\n    position: absolute;\n    top: 100%;\n  }\n}\n\n/**\n * Left AND Right region only\n */\n@include get-location($type: vertical) {\n}\n","////////////////////////////////////////////////////////////////////////////////\n// ADMIN\n// -----------------------------------------------------------------------------\n// Styles applied when in admin mode.\n\n.is-escort-admin {\n\n  @each $region, $settings in $regions {\n\n    /**\n     * In admin mode we want the vertical panels expanded by default\n     */\n    .escort-#{$region} {\n\n      @if map-get($settings, type) == 'vertical' {\n        width: map-get($settings, size_full);\n      }\n    }\n\n    /**\n     * In admin mode we want elements fully expanded so the wrapper needs to accomodate\n     */\n    &.has-escort-#{$region} {\n\n      .escort-wrapper {\n\n        @if map-get($settings, type) == 'vertical' {\n\n          @if map-get($settings, position) == 'left' {\n            left: map-get($settings, size_full);\n          }\n\n          @if map-get($settings, position) == 'right' {\n            right: map-get($settings, size_full);\n          }\n        }\n      }\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// TYPOGRAPHY\n// -----------------------------------------------------------------------------\n// Defines fonts, weights, and other character specific styles\n\n@include font-face($font-family, $font-location, $font-weight, normal, $font-format);\n\n.escort-region {\n  font-family: $font;\n  font-size: $font-size;\n\n  a {\n    text-decoration: none;\n    color: $primary-color;\n    transition: color 300ms, border 300ms, background-color 300ms, padding 300ms;\n    border: 0;\n    outline: none;\n    cursor: pointer;\n\n    &:hover {\n      color: $secondary-color;\n      text-decoration: none;\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// ADD\n// -----------------------------------------------------------------------------\n// Styles for add escort widget button on the admin page\n\n.escort-item {\n\n  &.escort-add {\n    text-align: center;\n\n    > div {\n      @extend %button;\n    }\n\n    .escort-icon {\n\n      i {\n        font-size: $font-size * 0.75;\n        vertical-align: baseline;\n      }\n    }\n  }\n}\n\n/**\n * Top AND Bottom region\n */\n@include get-location($type: horizontal) {\n\n  .escort-add {\n\n    > div {\n      vertical-align: middle;\n\n      i {\n        line-height: $font-size * 0.75;\n      }\n    }\n  }\n}\n\n/**\n * Top region only\n */\n@include get-location($type: horizontal, $region: top) {\n\n  .escort-add {\n\n    > div {\n      @include button-style($region: top);\n    }\n  }\n}\n\n/**\n * Bottom region only\n */\n@include get-location($type: horizontal, $region: bottom) {\n\n  .escort-add {\n\n    > div {\n      @include button-style($region: bottom);\n    }\n  }\n}\n\n/**\n * Left region only\n */\n@include get-location($type: vertical, $region: left) {\n\n  .escort-add {\n\n    > div {\n      @include button-style($region: left);\n    }\n  }\n}\n\n/**\n * Right region only\n */\n@include get-location($type: vertical, $region: right) {\n\n  .escort-add {\n\n    > div {\n      @include button-style($region: right);\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// Icon\n// -----------------------------------------------------------------------------\n// Defines styles associated with all regions\n\n/**\n * Styles that apply to all escort regions.\n */\n.escort-icon {\n  text-align: center;\n\n  i {\n    vertical-align: middle;\n  }\n}\n\n.icon-only {\n\n  .escort-link.has-icon {\n\n    &:hover {\n\n      .escort-content {\n        display: block;\n      }\n    }\n\n    .escort-content {\n      margin: 0 !important;\n      display: none;\n      position: absolute;\n      line-height: $base-size / 2;\n      min-width: 100%;\n      left: 0;\n      padding: ($padding / 4) $padding;\n    }\n  }\n}\n\n/**\n * Top AND Bottom region only\n */\n@include get-location($type: horizontal) {\n\n  .escort-item:not(.escort-add) { // sass-lint:disable-line force-pseudo-nesting\n\n    .escort-icon {\n\n      i {\n        font-size: $font-size * 1.5;\n      }\n    }\n  }\n}\n\n@include get-location($type: horizontal, $region: top) {\n\n  &.icon-only {\n\n    .escort-link.has-icon:not(.escort-add) { // sass-lint:disable-line force-pseudo-nesting\n\n      .escort-content {\n        @include css-triangle($base-size / 4.5, smart-scale($bg-color-top, 20%), up, before) {\n          bottom: 100%;\n          position: absolute;\n        };\n\n        background-color: smart-scale($bg-color-top, 20%);\n        top: 100%;\n        border-bottom-left-radius: $border-radius;\n        border-bottom-right-radius: $border-radius;\n      }\n    }\n\n    .escort-top-right {\n\n      .escort-link.has-icon:not(.escort-add) { // sass-lint:disable-line force-pseudo-nesting\n\n        .escort-content {\n          left: auto;\n          right: 0;\n\n          &:before {\n            right: $margin;\n          }\n        }\n      }\n    }\n  }\n}\n\n@include get-location($type: horizontal, $region: bottom) {\n\n  &.icon-only {\n\n    .escort-link.has-icon:not(.escort-add) { // sass-lint:disable-line force-pseudo-nesting\n\n      .escort-content {\n        @include css-triangle($base-size / 4.5, smart-scale($bg-color-bottom, 20%), down, before) {\n          top: 100%;\n          position: absolute;\n        };\n\n        background-color: smart-scale($bg-color-bottom, 20%);\n        bottom: 100%;\n        border-top-left-radius: $border-radius;\n        border-top-right-radius: $border-radius;\n      }\n    }\n\n    .escort-bottom-right {\n\n      .escort-link.has-icon:not(.escort-add) { // sass-lint:disable-line force-pseudo-nesting\n\n        .escort-content {\n          left: auto;\n          right: 0;\n\n          &:before {\n            right: $margin;\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Left AND Right region only\n */\n@include get-location($type: vertical) {\n\n  .escort-item:not(.escort-add) { // sass-lint:disable-line force-pseudo-nesting\n\n    .escort-icon {\n      width: $base-size;\n      display: inline-block;\n\n      i {\n        font-size: $font-size * 1.75;\n      }\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// Ops\n// -----------------------------------------------------------------------------\n// Styles for operation buttons for each escort widget on the admin page\n\n.escort-region {\n\n  // .escort-ops {\n  //   display: block !important;\n  // }\n\n  &:hover {\n\n    .escort-ops {\n      display: block;\n    }\n  }\n}\n\n.escort-ops {\n  display: none;\n  position: absolute;\n  right: 0;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n  z-index: 1;\n\n  li {\n    display: inline-flex;\n  }\n}\n\n/**\n * Top region only\n */\n@include get-location($type: horizontal, $region: top) {\n\n  .escort-ops {\n    top: 100%;\n  }\n}\n\n/**\n * Bottom region only\n */\n@include get-location($type: horizontal, $region: bottom) {\n\n  .escort-ops {\n    bottom: 100%;\n  }\n}\n\n/**\n * Left region only\n */\n@include get-location($type: vertical) {\n\n  .escort-ops {\n    top: 0;\n\n    a {\n      padding: 0 ($padding / 2);\n      line-height: $base-size;\n    }\n\n    > :first-child {\n\n      a {\n        padding-left: $padding / 2;\n      }\n    }\n\n    > :last-child {\n\n      a {\n        padding-right: $padding / 2;\n      }\n    }\n  }\n}\n\n/**\n * Left region only\n */\n@include get-location($type: vertical, $region: left) {\n\n  .escort-ops {\n    // @include button-style($region: left, $transparent: true) {\n    //   display: none;\n    //   box-shadow: 0 1px 10px transparent;\n    // };\n    background-color: $bg-color-left;\n\n    > :first-child {\n      border-left: 1px solid rgba(smart-scale($bg-color-left), 0.2); // sass-lint:disable-line no-color-literals\n      border-right: 1px solid rgba(smart-scale($bg-color-left), 0.2); // sass-lint:disable-line no-color-literals\n    }\n\n    > :last-child {\n      border-left: 1px solid rgba(smart-scale($bg-color-left), 0.2); // sass-lint:disable-line no-color-literals\n    }\n  }\n}\n\n/**\n * Right region only\n */\n@include get-location($type: vertical, $region: right) {\n\n  .escort-ops {\n    // @include button-style($region: right, $transparent: true) {\n    //   display: none;\n    //   box-shadow: 0 1px 10px transparent;\n    // };\n    background-color: $bg-color-right;\n\n    > :first-child {\n      border-left: 1px solid rgba(smart-scale($bg-color-right), 0.2); // sass-lint:disable-line no-color-literals\n      border-right: 1px solid rgba(smart-scale($bg-color-right), 0.2); // sass-lint:disable-line no-color-literals\n    }\n\n    > :last-child {\n      border-left: 1px solid rgba(smart-scale($bg-color-right), 0.2); // sass-lint:disable-line no-color-literals\n    }\n  }\n}\n",".is-escort-admin {\n\n  .escort-item {\n    \n    .escort-drag {\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      text-indent: -1000px;\n      cursor: move;\n    }\n  }\n}\n\n.escort-sorting {\n\n  .escort-placeholder {\n    display: block;\n    position: relative;\n    text-align: center;\n    padding: $padding;\n    outline: transparent dashed 2px;\n    outline-offset: ($margin * -1) / 3;\n    font-style: italic;\n    height: $base-size !important;\n    width: 100% !important;\n\n    &::before {\n      content: 'Dropzone';\n      display: block;\n    }\n  }\n\n  @include get-location($type: horizontal, $region: top) {\n\n    .escort-placeholder {\n      color: smart-scale($bg-color-top, $scale: 35%);\n      outline-color: smart-scale($bg-color-top, $scale: 25%);\n      padding: $padding;\n    }\n  }\n\n  @include get-location($type: horizontal, $region: bottom) {\n\n    .escort-placeholder {\n      color: smart-scale($bg-color-bottom, $scale: 35%);\n      outline-color: smart-scale($bg-color-bottom, $scale: 25%);\n      padding: $padding;\n    }\n  }\n\n  @include get-location($type: vertical, $region: left) {\n\n    .escort-placeholder {\n      color: smart-scale($bg-color-left, $scale: 35%);\n      outline-color: smart-scale($bg-color-left, $scale: 25%);\n    }\n  }\n\n  @include get-location($type: vertical, $region: right) {\n\n    .escort-placeholder {\n      color: smart-scale($bg-color-right, $scale: 35%);\n      outline-color: smart-scale($bg-color-right, $scale: 25%);\n    }\n  }\n}\n"]}