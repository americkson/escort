{"version":3,"sources":["escort.scss"],"names":[],"mappings":"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","file":"escort.css","sourcesContent":["/**\n * Region setting.\n */\n$regions: (\n  top: (\n    'type': 'horizontal',\n    'position': 'top',\n    'size': 50px,\n    'bg': #2e2f2f,\n    'padding': 10px,\n  ),\n  bottom: (\n    'type': 'horizontal',\n    'position': 'bottom',\n    'size': 40px,\n    'bg': #2e2f2f,\n    'padding': 10px,\n  ),\n  left: (\n    'type': 'vertical',\n    'position': 'left',\n    'size': 60px,\n    'size_full': 380px,\n    'bg': #ccd2d4,\n    'padding': 10px,\n  ),\n  right: (\n    'type': 'vertical',\n    'position': 'right',\n    'size': 60px,\n    'size_full': 380px,\n    'bg': #ccd2d4,\n    'padding': 10px,\n  ),\n);\n\n$white: #fff;\n$white-30: rgba($white, 0.3);\n$black: #101010;\n$black-30: rgba($black, 0.3);\n$primary: #4190e7;\n\n/**\n * Function for getting setting from the regions map.\n */\n@function setting($keys...) {\n  $map: $regions;\n  @each $key in $keys {\n    $map: map-get($map, $key);\n  }\n  @return $map;\n}\n\n.has-escort {\n  overflow: hidden;\n}\n\n/**\n * The wrapper around the content of the page. The escort regions exists as\n * siblings to this element.\n */\n.escort-wrapper {\n  z-index: 0;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  height: auto;\n\n  @each $region, $settings in $regions {\n\n    /**\n     * Offset the main content area based on the size of each escort region\n     * unless the region is set as hidden (deterined based on the\n     * body.hide-escort-?).\n     */\n    .has-escort-#{$region} & {\n\n      @if map-get($settings, type) == 'horizontal' {\n\n        @if map-get($settings, position) == 'top' {\n          top: map-get($settings, size);\n        }\n\n        @if map-get($settings, position) == 'bottom' {\n          bottom: map-get($settings, size);\n        }\n      }\n\n      @if map-get($settings, type) == 'vertical' {\n\n        @if map-get($settings, position) == 'left' {\n          left: map-get($settings, size);\n        }\n\n        @if map-get($settings, position) == 'right' {\n          right: map-get($settings, size);\n        }\n      }\n    }\n\n    /**\n     * Regions can be hidden and toggled active. If they are hidden there\n     * should be no offset.\n     */\n    .hide-escort-#{$region} & {\n\n      @if map-get($settings, type) == 'horizontal' {\n\n        @if map-get($settings, position) == 'top' {\n          top: 0;\n        }\n\n        @if map-get($settings, position) == 'bottom' {\n          bottom: 0;\n        }\n      }\n\n      @if map-get($settings, type) == 'vertical' {\n\n        @if map-get($settings, position) == 'left' {\n          left: 0;\n        }\n\n        @if map-get($settings, position) == 'right' {\n          right: 0;\n        }\n      }\n    }\n\n    /**\n     * In admin mode we want elements fully expanded.\n     */\n    .is-escort-admin.has-escort-#{$region} & {\n\n      @if map-get($settings, type) == 'vertical' {\n\n        @if map-get($settings, position) == 'left' {\n          left: map-get($settings, size_full);\n        }\n\n        @if map-get($settings, position) == 'right' {\n          right: map-get($settings, size_full);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Styles that apply to all escort regions.\n */\n.escort-region {\n  display: flex;\n  position: relative;\n  z-index: 10;\n\n  * {\n    box-sizing: border-box;\n  }\n\n  .escort-section {\n    display: flex;\n\n    // Make first section within region fully expanded.\n    &:first-child {\n      flex: auto;\n    }\n  }\n}\n\n/**\n * Region specific styles.\n */\n@each $region, $settings in $regions {\n\n  .escort-#{$region} {\n    background: map-get($settings, bg);\n    color: $white;\n    transition: all 300ms;\n\n    .escort-ops {\n      display: none;\n    }\n\n    &:hover {\n\n      .escort-ops {\n        display: block;\n      }\n    }\n\n    /**\n     * If region is horizontal.\n     */\n    @if map-get($settings, type) == 'horizontal' {\n      position: absolute;\n      left: 0;\n      right: 0;\n      height: map-get($settings, size);\n      width: 100%;\n      z-index: 10;\n\n      @if map-get($settings, position) == 'top' {\n        top: 0;\n      }\n\n      @if map-get($settings, position) == 'bottom' {\n        bottom: 0;\n      }\n\n      /**\n       * Horizontal sections\n       */\n      .escort-section {\n\n        &:first-child {\n\n          .escort-item {\n            border-left: 0;\n          }\n        }\n\n        &:last-child {\n\n          .escort-item {\n            border-right: 0;\n          }\n        }\n      }\n\n      /**\n       * Horizontal items\n       */\n      .escort-item {\n        line-height: map-get($settings, size);\n        padding: 0 map-get($settings, padding);\n        border-right: 1px dotted $white-30;\n        border-left: 1px dotted $white-30;\n\n        &.escort-group {\n          border: 0;\n          padding: 0;\n        }\n\n        &.escort-link {\n\n          &:hover {\n            background: lighten(map-get($settings, bg), 5%);\n          }\n        }\n\n        &.is-active {\n          background: darken(map-get($settings, bg), 5%);\n        }\n      }\n\n      /**\n       * Horizontal icons\n       */\n      .escort-icon {\n        margin-right: map-get($settings, padding) / 2;\n      }\n\n      /**\n       * Horizontal operations\n       */\n      .escort-ops {\n        top: 100%;\n      }\n    }\n\n    /**\n     * If region is vertical.\n     */\n    @if map-get($settings, type) == 'vertical' {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      width: map-get($settings, size);\n      flex-direction: column;\n      overflow: hidden;\n      z-index: 5;\n\n      @if map-get($settings, position) == 'left' {\n        left: 0;\n      }\n\n      @if map-get($settings, position) == 'right' {\n        right: 0;\n        // order: 10;\n      }\n\n      /**\n       * Vertical sections\n       */\n      .escort-section {\n        flex-direction: column;\n\n        &:first-child {\n\n          .escort-item {\n            border-top: 0;\n          }\n        }\n\n        &:last-child {\n\n          .escort-item {\n            border-bottom: 0;\n          }\n        }\n      }\n\n      /**\n       * Vertical items\n       */\n      .escort-item {\n        padding: map-get($settings, padding) 0;\n        width: map-get($settings, size_full);\n        border-top: 1px dotted $black-30;\n        border-bottom: 1px dotted $black-30;\n\n        &.escort-group {\n          display: block;\n          border: 0;\n          padding: 0;\n        }\n      }\n\n      /**\n       * Vertical icons\n       */\n      .escort-icon {\n        width: map-get($settings, size);\n        text-align: center;\n      }\n\n      /**\n       * Vertical operations\n       */\n      .escort-ops {\n        right: 0;\n      }\n\n      /**\n       * Vertical regions can be offset by horizontal regions. We loop through\n       * all regions again, and add offset.\n       */\n      @each $r, $s in $regions {\n\n        @if map-get($s, type) == 'horizontal' {\n\n          @if map-get($s, position) == 'top' {\n            .has-escort-#{$r}:not(.hide-escort-#{$r}) & { // sass-lint:disable-line force-pseudo-nesting\n              top: map-get($s, size);\n            }\n          }\n\n          @if map-get($s, position) == 'bottom' {\n            .has-escort-#{$r}:not(.hide-escort-#{$r}) &, // sass-lint:disable-line force-pseudo-nesting\n            .show-escort-mini-#{$r} &,\n            .show-escort-full-#{$r} & {\n              bottom: map-get($s, size);\n            }\n          }\n        }\n      }\n    }\n\n    /**\n     * Regions can be set as hidden and as such should not be shown.\n     */\n    .hide-escort-#{$region} & {\n\n      @if map-get($settings, type) == 'horizontal' {\n\n        @if map-get($settings, position) == 'top' {\n          transform: translate(0, -100%);\n        }\n\n        @if map-get($settings, position) == 'bottom' {\n          transform: translate(0, 100%);\n        }\n      }\n\n      @if map-get($settings, type) == 'vertical' {\n\n        @if map-get($settings, position) == 'left' {\n          transform: translate(-100%, 0);\n        }\n\n        @if map-get($settings, position) == 'right' {\n          transform: translate(100%, 0);\n        }\n      }\n    }\n\n    .show-escort-mini-#{$region} & {\n      transform: translate(0, 0);\n    }\n\n    .show-escort-full-#{$region} & {\n      transform: translate(0, 0);\n\n      @if map-get($settings, type) == 'vertical' {\n        width: map-get($settings, size_full);\n      }\n    }\n  }\n}\n\n/**\n * Styles that apply globally to escort items. All position-specific styles\n * should be added in the region specific style section.\n */\n.escort-item {\n  display: flex;\n  transition: all 300ms;\n  position: relative;\n\n  // Link elements\n  &.escort-link {\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n  // Toggle elements\n  &.escort-toggle {\n    justify-content: center;\n\n    @each $region, $settings in $regions {\n\n      &[data-region='#{$region}'] {\n\n        @if map-get($settings, type) == 'vertical' {\n          width: map-get($settings, size);\n        }\n\n        // The active state of the MINI region toggle.\n        .show-escort-mini-#{$region} & {\n          color: $primary;\n        }\n\n        // The active state of the FULL region toggle.\n        .show-escort-full-#{$region} & {\n          color: $primary;\n        }\n      }\n    }\n  }\n\n  // Drag\n  .escort-drag {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    text-indent: -1000px;\n    cursor: move;\n  }\n\n  // Operations\n  .escort-ops {\n    position: absolute;\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    line-height: normal;\n  }\n}\n\n/**\n * Styles applied when in admin mode.\n */\n.is-escort-admin {\n\n  @each $region, $settings in $regions {\n\n    .escort-#{$region} {\n\n      @if map-get($settings, type) == 'vertical' {\n        width: map-get($settings, size_full);\n      }\n    }\n\n    // .escort-wrapper {\n\n    //   @if map-get($settings, position) == 'left' {\n    //     left: map-get($settings, size_full);\n    //   }\n\n    //   @if map-get($settings, position) == 'right' {\n    //     right: map-get($settings, size_full) !important;\n    //   }\n    // }\n  }\n\n}\n"]}