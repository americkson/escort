{"version":3,"sources":["utils/_placeholders.scss","utils/_functions.scss","base/_add.scss","base/_admin.scss","utils/_variables.scss","base/_ops.scss","utils/_mixins.scss","components/add/_add_horizontal.scss","components/add/_add_left.scss","components/add/_add_right.scss","components/ops/_ops_bottom.scss","components/ops/_ops_horizontal.scss","components/ops/_ops_left.scss","components/ops/_ops_mini.scss","components/ops/_ops_right.scss","components/ops/_ops_top.scss","components/ops/_ops_vertical.scss"],"names":[],"mappings":"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","file":"escort.admin.css","sourcesContent":["////////////////////////////////////////////////////////////////////////////////\n// Placeholders\n//\n// -----------------------------------------------------------------------------\n// Table of Contents:\n//\n//   1. Button\n\n\n/////////////////////\n// 1. Button\n// Base styles for any button type. @See button-style mixin for further styles.\n// ---------\n\n%button {\n  display: inline-flex;\n  border-radius: $border-radius;\n  color: smart-scale($primary-color, $scale: 80%);\n  padding: 0 ($padding * 0.66);\n  line-height: $font-size * 2;\n  text-shadow: none;\n  border: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  transition: background-color 300ms, color 300ms, box-shadow 300ms;\n\n  &:visited,\n  &:active,\n  &:focus {\n    color: smart-scale($primary-color, $scale: 80%);\n  }\n\n  &:hover {\n    color: smart-scale($primary-color, $scale: 100%);\n    cursor: pointer;\n    text-decoration: none;\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// FUNCTIONS\n//\n// -----------------------------------------------------------------------------\n// Table of Contents:\n//\n//   1. Setting\n//\t 2. Smart Scale\n\n\n/////////////////////\n// 1. Setting\n// Retrieve setting from the regions map.\n// ---------\n\n@function setting($keys...) {\n  $map: $regions;\n  @each $key in $keys {\n    $map: map-get($map, $key);\n  }\n  @return $map;\n}\n\n\n/////////////////////\n// 2. Smart Scale\n// Scales a color to be darker if it's light, or lighter if it's dark.\n// ---------\n\n@function smart-scale($color, $scale: 75%, $threshold: 50%) {\n  @if lightness($color) > $threshold {\n    $scale: -$scale;\n  }\n  @return scale-color($color, $lightness: $scale);\n}\n","////////////////////////////////////////////////////////////////////////////////\n// ADD\n// -----------------------------------------------------------------------------\n// Styles for add escort widget button on the admin page\n\n.escort-item {\n\n  &.escort-add {\n    text-align: center;\n\n    > div {\n      @extend %button;\n    }\n\n    .escort-icon {\n\n      i {\n        font-size: $font-size * 0.75;\n        vertical-align: baseline;\n      }\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// ADMIN\n// -----------------------------------------------------------------------------\n// Styles applied when in admin mode.\n\n\n.escort-left-bottom,\n.escort-right-bottom {\n  border-top: 0;\n}\n\n@each $region, $settings in $regions {\n\n  /**\n   * In admin mode we want the vertical panels expanded by default\n   */\n  .escort-#{$region} {\n\n    @if map-get($settings, type) == 'vertical' {\n      width: map-get($settings, size_full);\n    }\n\n    @if map-get($settings, position) == 'mini' {\n\n      .has-escort-left & {\n        left: $base-size-active;\n      }\n\n      .has-escort-right & {\n        right: $base-size-active;\n      }\n    }\n  }\n\n  /**\n   * In admin mode we want elements fully expanded so the wrapper needs to accomodate\n   */\n  &.has-escort-#{$region} {\n\n    .escort-wrapper {\n\n      @if map-get($settings, type) == 'vertical' {\n\n        @if map-get($settings, position) == 'left' {\n          padding-left: map-get($settings, size_full);\n        }\n\n        @if map-get($settings, position) == 'right' {\n          padding-right: map-get($settings, size_full);\n        }\n      }\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// VARIABLES\n//\n// -----------------------------------------------------------------------------\n// Table of Contents:\n//\n//   1. Colors\n//   2. Spacing/Sizes\n//   3. Typography\n//   3. Breakpoints\n\n\n/////////////////////\n// 1. Colors\n// ---------\n\n$primary-color: #1c98c1;\n$secondary-color: #ec4431;\n\n$bg-color-top: #2b2b2b;\n$bg-color-bottom: #2b2b2b;\n$bg-color-mini: #2b2b2b;\n$bg-color-left: #f0f0f0;\n$bg-color-right: #f0f0f0;\n\n// $bg-color-edit: #4eca33;\n// $bg-color-disable: #e1be40;\n// $bg-color-delete: #e53636;\n\n$white: #fff;\n$black: #111;\n\n\n/////////////////////\n// 2. Spacing/Sizes\n// ---------\n\n$base-size: 3.5rem;\n$base-size-active: $base-size * 6;\n\n$base-padding: 1em;\n$base-margin: 1em;\n$padding: 1em;\n$margin: 1em;\n$border-radius: 3px;\n\n\n/////////////////////\n// 3. Typography\n// ---------\n\n$font-size: 0.92rem;\n\n$font-family: Ubuntu;\n$font-type: sans-serif;\n$font-weight: 400;\n$font-location: 'fonts/Ubuntu';\n$font-format: ttf;\n\n$font: $font-family, $font-type;\n\n/////////////////////\n// 4. Breakpoints\n// ---------\n// $breakpoints: (\n//   small: 0, // converted from \"0\"\n//   medium: 40em, // converted from \"all and (min-width: 40em)\"\n//   large: 64em, // converted from \"all and (min-width: 64em)\"\n//   xlarge: 120em, // converted from \"all and (min-width: 120em)\"\n// );\n// $breakpoint-classes: (small medium large xlarge);\n","////////////////////////////////////////////////////////////////////////////////\n// Ops\n// -----------------------------------------------------------------------------\n// Styles for operation buttons for each escort widget on the admin page\n\n.is-escort-admin {\n\n  .escort-top-left,\n  .escort-bottom-left,\n  .escort-mini-left {\n\n    .escort-ops {\n      left: 0;\n    }\n  }\n\n  .escort-top-right,\n  .escort-bottom-right,\n  .escort-mini-right {\n\n    .escort-ops {\n      right: 0;\n    }\n  }\n\n  .escort-region:hover { // sass-lint:disable-line force-pseudo-nesting\n\n    .escort-ops {\n\n      .drag {\n        cursor: move;\n        vertical-align: middle;\n      }\n    }\n  }\n\n  .escort-item:hover { // sass-lint:disable-line force-pseudo-nesting\n\n    .escort-ops {\n      opacity: 1;\n    }\n\n    a,\n    li {\n      color: $white;\n      transition: none;\n      text-shadow: 0 1px 3px transparentize($black, 0.75);\n    }\n  }\n}\n\n.escort-ops {\n  display: none;\n  position: absolute;\n  right: 0;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n  z-index: 1;\n\n  li {\n    text-align: center;\n    display: none;\n  }\n\n  .drag {\n    color: $primary-color !important;\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n// MIXINS\n//\n// -----------------------------------------------------------------------------\n// Table of Contents:\n//\n//   1. Get Region\n//   2. Gradient\n//   3. Button\n//   4. Font Face\n//   5. Ripple\n//   6. CSS Triangle\n\n\n/////////////////////\n// 1. Get Region\n// Retrieve Region for specific styles. $type => both, horizontal, vertical. $regions => top, bottom, left, right\n// ---------\n\n@mixin get-location($type: 'both', $region: 'both') {\n\n  @if ($type == 'both') and ($region == 'both') {\n\n    .escort-region {\n      @content;\n    }\n  }\n\n  @if $type == 'horizontal' {\n\n    @if $region == 'both' {\n      .escort-top,\n      .escort-bottom,\n      .escort-mini {\n        @content;\n      }\n    } \n\n    @if $region == 'top' {\n      .escort-top {\n        @content;\n      }\n    }\n\n    @if $region == 'bottom' {\n      .escort-bottom {\n        @content;\n      }\n    }\n\n    @if $region == 'mini' {\n      .escort-mini {\n        @content;\n      }\n    }\n  }\n\n  @if $type == 'vertical' {\n\n    @if $region == 'both' {\n      .escort-left,\n      .escort-right {\n        @content;\n      }\n    } \n\n    @if $region == 'left' {\n      .escort-left {\n        @content;\n      }\n    }\n\n    @if $region == 'right' {\n      .escort-right {\n        @content;\n      }\n    }\n  }\n}\n\n/////////////////////\n// 2. Gradient\n// Creates a gradient with backup color;\n// ---------\n@mixin linear-gradient($color1, $color2, $direction, $amount1: 0%, $amount2: 100%) {\n  background-color: $color1; /* Old browsers */\n  background: linear-gradient(to $direction, $color1 $amount1, $color2 $amount2);\n}\n\n@mixin radial-gradient($center, $edge) {\n  background-color: $edge;\n  background: radial-gradient(ellipse at center, $center $amount1, $edge $amount2);\n}\n\n/////////////////////\n// 3. Button\n// Defines base button styles\n// ---------\n@mixin button-style($region, $transparent: false) {\n  @include linear-gradient($primary-color, darken($primary-color, 8%), bottom);\n  color: smart-scale($primary-color, $scale: 75%);\n\n  &:hover {\n    @include linear-gradient(lighten($primary-color, 5%), $primary-color, bottom);\n  }\n\n  @if $region == 'top' {\n    box-shadow: 0 1px 10px adjust-color($bg-color-top, $saturation: 0%, $lightness: -20%);\n\n    &:hover {\n      box-shadow: 0 3px 15px adjust-color($bg-color-top, $saturation: 0%, $lightness: -40%);\n    }\n\n    @if $transparent == true {\n      @include linear-gradient(rgba(smart-scale($bg-color-top), 0.1), rgba(smart-scale($bg-color-top), 0.33), bottom);\n      color: smart-scale($bg-color-top, $scale: 50%);\n\n      &:visited,\n      &:active,\n      &:focus {\n        color: smart-scale($bg-color-top, $scale: 50%);\n      }\n\n      &:hover {\n        background-color: lighten($primary-color, 10%);\n        color: smart-scale($bg-color-top, $scale: 100%);\n      }\n    }\n  }\n\n  @if $region == 'bottom' {\n    box-shadow: 0 1px 10px adjust-color($bg-color-bottom, $saturation: 0%, $lightness: -20%);\n\n    &:hover {\n      box-shadow: 0 3px 15px adjust-color($bg-color-bottom, $saturation: 0%, $lightness: -40%);\n    }\n\n    @if $transparent == true {\n      @include linear-gradient(rgba(smart-scale($bg-color-bottom), 0.1), rgba(smart-scale($bg-color-bottom), 0.33), bottom);\n      color: smart-scale($primary-color, $scale: 50%);\n\n      &:visited,\n      &:active,\n      &:focus {\n        color: smart-scale($primary-color, $scale: 100%);\n      }\n\n      &:hover {\n        background-color: lighten($primary-color, 10%);\n        color: smart-scale($primary-color, $scale: 50%);\n      }\n    }\n  }\n\n  @if $region == 'mini' {\n    box-shadow: 0 1px 10px adjust-color($bg-color-mini, $saturation: 0%, $lightness: -20%);\n    padding: 0 ($padding * 0.66);\n    line-height: $font-size * 1.66;\n\n    &:hover {\n      box-shadow: 0 3px 15px adjust-color($bg-color-mini, $saturation: 0%, $lightness: -40%);\n    }\n\n    @if $transparent == true {\n      @include linear-gradient(rgba(smart-scale($bg-color-mini), 0.1), rgba(smart-scale($bg-color-mini), 0.33), bottom);\n      color: smart-scale($bg-color-mini, $scale: 50%);\n\n      &:visited,\n      &:active,\n      &:focus {\n        color: smart-scale($bg-color-mini, $scale: 50%);\n      }\n\n      &:hover {\n        background-color: lighten($primary-color, 10%);\n        color: smart-scale($bg-color-mini, $scale: 100%);\n      }\n    }\n  }\n\n  @if $region == 'left' {\n    box-shadow: 0 1px 10px adjust-color($bg-color-left, $saturation: 0%, $lightness: -15%);\n\n    &:hover {\n      box-shadow: 0 3px 15px adjust-color($bg-color-left, $saturation: 0%, $lightness: -35%);\n    }\n\n    @if $transparent == true {\n      @include linear-gradient(rgba(smart-scale($bg-color-left), 0.1), rgba(smart-scale($bg-color-left), 0.25), bottom);\n      color: smart-scale($bg-color-left, $scale: 66%);\n\n      &:visited,\n      &:active,\n      &:focus {\n        color: smart-scale($bg-color-left, $scale: 66%);\n      }\n\n      &:hover {\n        background-color: lighten($primary-color, 10%);\n        color: smart-scale($primary-color, $scale: 80%);\n\n        a {\n          color: smart-scale($primary-color, $scale: 85%);\n        }\n      }\n    }\n  }\n\n  @if $region == 'right' {\n    box-shadow: 0 1px 10px adjust-color($bg-color-right, $saturation: 0%, $lightness: -15%);\n\n    &:hover {\n      box-shadow: 0 3px 15px adjust-color($bg-color-right, $saturation: 0%, $lightness: -35%);\n    }\n\n    @if $transparent == true {\n      @include linear-gradient(rgba(smart-scale($bg-color-right), 0.1), rgba(smart-scale($bg-color-right), 0.25), bottom);\n      color: smart-scale($bg-color-right, $scale: 66%);\n\n      &:visited,\n      &:active,\n      &:focus {\n        color: smart-scale($bg-color-right, $scale: 100%);\n      }\n\n      &:hover {\n        background-color: lighten($primary-color, 10%);\n        color: smart-scale($primary-color, $scale: 85%);\n\n        a {\n          color: smart-scale($primary-color, $scale: 80%);\n        }\n      }\n    }\n  }\n\n  @content;\n}\n\n/////////////////////\n// 4. Font Face\n// Generates the proper font styles from a linked font file(s)\n// ---------\n@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {\n  $src: null;\n\n  $extmods: (\n    eot: '?',\n    svg: '#' + str-replace($name, ' ', '_')\n  );\n\n  $formats: (\n    otf: 'opentype',\n    ttf: 'truetype'\n  );\n\n  @each $ext in $exts {\n    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\n    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\n    $src: append($src, url(quote($path + '.' + $extmod)) format(quote($format)), comma);\n  }\n\n  @font-face {\n    font-family: quote($name);\n    font-style: $style;\n    font-weight: $weight;\n    src: $src;\n  }\n}\n\n\n/////////////////////\n// 5. Ripple\n// Generates the proper font styles from a linked font file(s)\n// ---------\n// @include keyframes(rippleTop) {\n//   from {\n//     opacity: 1;\n//     @include transform(scale(0));\n//     background-color: $theforce-top-primary;\n//   }\n//   to {\n//     opacity: 0;\n//     @include transform(scale(2.5));\n//     background-color: transparent;\n//   }\n// }\n\n\n/////////////////////\n// 5. CSS Triangle\n// Creates a CSS triangle, which can be used for dropdown arrows, dropdown pips, and more.\n// ---------\n@mixin css-triangle($size, $color, $direction, $position) {\n\n  @if ($position == before) {\n\n    &::before {\n      display: block;\n      width: 0;\n      height: 0;\n      border: inset $size;\n      content: '';\n\n      @if ($direction == down) {\n        border-bottom-width: 0;\n        border-top-style: solid;\n        border-color: $color transparent transparent;\n      }\n      @if ($direction == up) {\n        border-top-width: 0;\n        border-bottom-style: solid;\n        border-color: transparent transparent $color;\n      }\n      @if ($direction == right) {\n        border-right-width: 0;\n        border-left-style: solid;\n        border-color: transparent transparent transparent $color;\n      }\n      @if ($direction == left) {\n        border-left-width: 0;\n        border-right-style: solid;\n        border-color: transparent $color transparent transparent;\n      }\n\n      @content;\n    }\n  }\n\n  @if ($position == after) {\n\n    &::before {\n      display: block;\n      width: 0;\n      height: 0;\n      border: inset $size;\n      content: '';\n\n      @if ($direction == down) {\n        border-bottom-width: 0;\n        border-top-style: solid;\n        border-color: $color transparent transparent;\n      }\n      @if ($direction == up) {\n        border-top-width: 0;\n        border-bottom-style: solid;\n        border-color: transparent transparent $color;\n      }\n      @if ($direction == right) {\n        border-right-width: 0;\n        border-left-style: solid;\n        border-color: transparent transparent transparent $color;\n      }\n      @if ($direction == left) {\n        border-left-width: 0;\n        border-right-style: solid;\n        border-color: transparent $color transparent transparent;\n      }\n\n      @content;\n    }\n  }\n}\n","/**\n * Top AND Bottom region\n */\n@include get-location($type: horizontal) {\n\n  .escort-add {\n\n    > div {\n      vertical-align: middle;\n\n      i {\n        line-height: $font-size * 0.75;\n      }\n    }\n  }\n}\n","/**\n * Left region only\n */\n@include get-location($type: vertical, $region: left) {\n\n  .escort-add {\n\n    > div {\n      @include button-style($region: left);\n    }\n  }\n\n  .escort-left-top {\n\n    .escort-add {\n      border-top: 1px solid lighten($bg-color-left, 4%); // sass-lint:disable-line no-color-literals\n    }\n  }\n\n  .escort-left-bottom {\n\n    .escort-add {\n      border-bottom: 1px solid darken($bg-color-left, 4%); // sass-lint:disable-line no-color-literals\n    }\n  }\n}\n","/**\n * Right region only\n */\n@include get-location($type: vertical, $region: right) {\n\n  .escort-add {\n\n    > div {\n      @include button-style($region: right);\n    }\n  }\n\n  .escort-right-top {\n    \n    .escort-add {\n      border-top: 1px solid lighten($bg-color-right, 4%); // sass-lint:disable-line no-color-literals\n    }\n  }\n\n  .escort-right-bottom {\n    \n    .escort-add {\n      border-bottom: 1px solid darken($bg-color-right, 4%); // sass-lint:disable-line no-color-literals\n    }\n  }\n}\n","/**\n * Bottom region only\n */\n@include get-location($type: horizontal, $region: bottom) {\n\n  .escort-ops {\n    bottom: 100%;\n    background: smart-scale($bg-color-bottom, $scale: -12%);\n    box-shadow: 0 -4px 6px transparentize($black, 0.75);\n  }\n\n  .escort-item:hover { // sass-lint:disable-line force-pseudo-nesting\n      \n    .escort-ops {\n      \n      a {\n        @include button-style($region: bottom, $transparent: true) {\n          display: block;\n          padding: $padding / 2;\n        };\n      }  \n    }\n  }\n}\n","/**\n * Top region only\n */\n@include get-location($type: horizontal) {\n\n  &:hover { // sass-lint:disable-line force-pseudo-nesting\n\n    .escort-ops {\n      display: block;\n    }\n  }\n\n  .escort-ops {\n    padding: $padding / 3;\n    width: $base-size;\n    z-index: 1;\n    transition: width 300ms;\n\n    li:nth-child(2) { // sass-lint:disable-line force-pseudo-nesting\n      display: block;\n      line-height: $base-size / 2 !important;\n    }\n  }\n\n  .escort-item:hover {\n\n    .escort-ops {\n      width: $base-size * 2;\n      z-index: 2;\n\n      li {\n        display: block;\n        padding: ($padding / 4) ($padding / 2);\n      }\n\n      li,\n      a {\n        line-height: $base-size / 2 !important;\n        border-radius: $border-radius;\n      }\n    }\n  }\n}\n","/**\n * Left region only\n */\n@include get-location($type: vertical, $region: left) {\n\n  .escort-item:hover { // sass-lint:disable-line force-pseudo-nesting\n      \n    .escort-ops {\n\n      li {\n        background-color: $bg-color-left;\n      }\n\n      > :first-child {\n        border-left: 1px solid smart-scale($bg-color-left, 5%);\n        border-right: 1px solid smart-scale($bg-color-left, 5%);\n      }\n\n      > :nth-child(2) {\n        border-right: 1px solid smart-scale($bg-color-left, 5%);\n      }\n\n      > :last-child {\n        border-left: 1px solid smart-scale($bg-color-left, 5%);\n        border-right: 0;\n      }\n\n      a {\n        @include button-style($region: left, $transparent: true) {\n          display: block;\n          padding: $padding / 2;\n        };\n      }  \n    }\n  }\n}\n","/**\n * Mini region only\n */\n@include get-location($type: horizontal, $region: mini) {\n\n  .escort-ops {\n    top: 100%;\n    background: smart-scale($bg-color-mini, $scale: -12%);\n    box-shadow: 0 4px 6px transparentize($black, 0.75);\n    border-bottom-left-radius: $border-radius;\n    border-bottom-right-radius: $border-radius;\n  }\n\n  .escort-item:hover { // sass-lint:disable-line force-pseudo-nesting\n      \n    .escort-ops {\n      \n      a {\n        @include button-style($region: mini, $transparent: true) {\n          display: block;\n          padding: $padding / 2;\n        };\n      }  \n    }\n  }\n}\n","/**\n * Right region only\n */\n@include get-location($type: vertical, $region: right) {\n\n  .escort-item:hover { // sass-lint:disable-line force-pseudo-nesting\n      \n    .escort-ops {\n\n      li {\n        background-color: $bg-color-right;\n      }\n\n      > :first-child {\n        border-left: 1px solid smart-scale($bg-color-right, 5%);\n        border-right: 1px solid smart-scale($bg-color-right, 5%);\n      }\n\n      > :nth-child(2) {\n        border-right: 1px solid smart-scale($bg-color-right, 5%);\n      }\n\n      > :last-child {\n        border-left: 1px solid smart-scale($bg-color-right, 5%);\n        border-right: 0;\n      }\n\n      a {\n        @include button-style($region: left, $transparent: true) {\n          display: block;\n          padding: $padding / 2;\n        };\n      }  \n    }\n  }\n}\n","/**\n * Top region only\n */\n@include get-location($type: horizontal, $region: top) {\n\n  .escort-ops {\n    top: 100%;\n    background: smart-scale($bg-color-top, $scale: -12%);\n    box-shadow: 0 4px 6px transparentize($black, 0.75);\n    border-bottom-left-radius: $border-radius;\n    border-bottom-right-radius: $border-radius;\n  }\n\n  .escort-item:hover { // sass-lint:disable-line force-pseudo-nesting\n      \n    .escort-ops {\n      \n      a {\n        @include button-style($region: top, $transparent: true) {\n          display: block;\n          padding: $padding / 2;\n        };\n      }  \n    }\n  }\n}\n","/**\n * Left region only\n */\n@include get-location($type: vertical) {\n\n  &:hover { // sass-lint:disable-line force-pseudo-nesting\n\n    .escort-ops {\n      display: table;\n    }\n  }\n\n  .escort-ops {\n    top: 0;\n\n    li {\n      padding: 0;\n    }\n\n    li:nth-child(2) { // sass-lint:disable-line force-pseudo-nesting\n      display: table-cell;\n    }\n\n    a {\n      @extend %button;\n      padding: 0 ($padding / 2);\n      background-color: transparent;\n      transition: none;\n      line-height: $base-size;\n      color: $primary-color;\n    }\n\n    > :first-child {\n\n      a {\n        padding-left: $padding / 2;\n      }\n    }\n\n    > :last-child {\n\n      a {\n        padding-right: $padding / 2;\n      }\n    }\n  }\n\n  .escort-item:hover { // sass-lint:disable-line force-pseudo-nesting\n\n    .escort-ops {\n      width: 100%;\n\n      li {\n        padding: $padding / 2;\n        width: 25%;\n        display: table-cell;\n\n        a {\n          line-height: $base-size / 2;\n        }\n      }\n    }\n  }\n}\n"]}